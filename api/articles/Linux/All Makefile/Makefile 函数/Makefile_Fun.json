{"title":"Makefile 函数","uid":"2b7c34b21c0bac89a496b7554225c02a","slug":"Linux/All Makefile/Makefile 函数/Makefile_Fun","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.904Z","comments":true,"path":"api/articles/Linux/All Makefile/Makefile 函数/Makefile_Fun.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/cCGdo7tx2kPYjSH.jpg","content":"<h1 id=\"1-patsubst\"><a href=\"#1-patsubst\" class=\"headerlink\" title=\"1. patsubst\"></a><strong>1. patsubst</strong></h1><h2 id=\"1-1-基本语法\"><a href=\"#1-1-基本语法\" class=\"headerlink\" title=\"1.1. 基本语法\"></a>1.1. 基本语法</h2><ol>\n<li>语法：模式替换函数—<code>patsubst</code></li>\n</ol>\n<h2 id=\"1-2-例程\"><a href=\"#1-2-例程\" class=\"headerlink\" title=\"1.2. 例程\"></a>1.2. 例程</h2><pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">echo &quot;$(patsubst %.c,%.o,bar.c per.c io.c)&quot;</code></pre>\n\n<p>这里把字串“bar.c per.c io.c”中以 <code>.c</code> 结尾的单词替换成<code>.o</code>结尾的字符</p>\n<ul>\n<li>这里是执行后截图：  <img src=\"/post/Linux/All%20Makefile/Makefile%20%E5%87%BD%E6%95%B0/Makefile_Fun/Untitled.png\" alt=\"Untitled\"></li>\n</ul>\n<h1 id=\"2-notdir\"><a href=\"#2-notdir\" class=\"headerlink\" title=\"2. notdir\"></a><strong>2. notdir</strong></h1><h2 id=\"2-1-基本语法\"><a href=\"#2-1-基本语法\" class=\"headerlink\" title=\"2.1. 基本语法\"></a>2.1. 基本语法</h2><ol>\n<li>语法：把文件目录去掉，取出非目录部分</li>\n</ol>\n<pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">notdir xxx&#x2F;sda&#x2F;fa.c</code></pre>\n\n<h2 id=\"2-2-例程\"><a href=\"#2-2-例程\" class=\"headerlink\" title=\"2.2. 例程\"></a>2.2. 例程</h2><pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">echo &quot;$(notdir fsd&#x2F;cds&#x2F;sd.c)&quot;</code></pre>\n\n<p>notdir 会把文件名取出，路径去掉</p>\n<ul>\n<li>这是执行后的截图：  <img src=\"/post/Linux/All%20Makefile/Makefile%20%E5%87%BD%E6%95%B0/Makefile_Fun/Untitled_1.png\" alt=\"Untitled\"></li>\n</ul>\n<h1 id=\"3-wildcard\"><a href=\"#3-wildcard\" class=\"headerlink\" title=\"3. wildcard\"></a><strong>3. wildcard</strong></h1><h2 id=\"3-1-基本语法\"><a href=\"#3-1-基本语法\" class=\"headerlink\" title=\"3.1. 基本语法\"></a>3.1. 基本语法</h2><p>列出目录下所有匹配的文件名</p>\n<pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">wildcard *.c  #这个是列出当前目录的所有.c文件</code></pre>\n\n<h2 id=\"3-2-例程\"><a href=\"#3-2-例程\" class=\"headerlink\" title=\"3.2. 例程\"></a>3.2. 例程</h2><pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">echo &quot;$(wildcard *.c)&quot;</code></pre>\n\n<p>打印出该文件目录下的所有<code>.c</code>文件名</p>\n<h1 id=\"4-foreach\"><a href=\"#4-foreach\" class=\"headerlink\" title=\"4. foreach\"></a><strong>4. foreach</strong></h1><h2 id=\"4-1-基本语法\"><a href=\"#4-1-基本语法\" class=\"headerlink\" title=\"4.1. 基本语法\"></a>4.1. 基本语法</h2><ol>\n<li>语法：该函数是把放进<code>dirs</code>的内容循环放到<code>dir</code>中，并执行命令。一般搭配<code>wildcard</code>打印某路径下的全部内容。<br>&nbsp;</li>\n<li>使用：先在该路径下创建 a，b，c 三个文件夹 其中<code>dirs</code>是存放路径，调用<code>wildcard</code>查找文件名 <pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">dirs&#x3D;abc\nfile&#x3D;$(foreach dir,$(dirs),$(wildcard (dir)&#x2F;*))</code></pre></li>\n</ol>\n<h2 id=\"4-2-例程\"><a href=\"#4-2-例程\" class=\"headerlink\" title=\"4.2. 例程\"></a>4.2. 例程</h2><pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">.PHONY:all\n\ndirs&#x3D;a b c\nfile&#x3D;$(foreach dir,$(dirs),$(wildcard $(dir)&#x2F;*))\nall:\n        echo &quot;$(file)&quot;</code></pre>\n\n<ul>\n<li>执行出来后效果如下，可以看到把 a，b，c 目录下的文件名都打印出来了：  <img src=\"/post/Linux/All%20Makefile/Makefile%20%E5%87%BD%E6%95%B0/Makefile_Fun/Untitled_2.png\" alt=\"Untitled\"></li>\n</ul>\n<h2 id=\"4-3-易错点\"><a href=\"#4-3-易错点\" class=\"headerlink\" title=\"4.3. 易错点\"></a>4.3. 易错点</h2><ul>\n<li>以下是错误的写法：  <pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">.PHONY:all\n\ndirs&#x3D;a b c\nfile&#x3D;foreach dir,$(dirs),$(wildcard $(dir)&#x2F;*) \nall:\n        echo &quot;$(file)&quot;</code></pre>\n&nbsp;</li>\n<li>在给 file 变量赋值的时候并没有引用该函数，所以后续打印出来的是函数所在的路径  <img src=\"/post/Linux/All%20Makefile/Makefile%20%E5%87%BD%E6%95%B0/Makefile_Fun/Untitled_3.png\" alt=\"Untitled\"></li>\n</ul>\n","text":"1. patsubst1.1. 基本语法 语法：模式替换函数—patsubst 1.2. 例程echo &quot;$(patsubst %.c,%.o,bar.c per.c io.c)&quot; 这里把字串“bar.c per.c io.c”中以 .c 结尾的单词替换成.o...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-patsubst\"><span class=\"toc-text\">1. patsubst</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">1.1. 基本语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E4%BE%8B%E7%A8%8B\"><span class=\"toc-text\">1.2. 例程</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-notdir\"><span class=\"toc-text\">2. notdir</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2.1. 基本语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E4%BE%8B%E7%A8%8B\"><span class=\"toc-text\">2.2. 例程</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-wildcard\"><span class=\"toc-text\">3. wildcard</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">3.1. 基本语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E4%BE%8B%E7%A8%8B\"><span class=\"toc-text\">3.2. 例程</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-foreach\"><span class=\"toc-text\">4. foreach</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">4.1. 基本语法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E4%BE%8B%E7%A8%8B\"><span class=\"toc-text\">4.2. 例程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-%E6%98%93%E9%94%99%E7%82%B9\"><span class=\"toc-text\">4.3. 易错点</span></a></li></ol></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"引用 Makefile 管理项目","uid":"26b9a4870bd866c20b3377bf9d2e80e2","slug":"Linux/All Makefile/引用 Makefile 管理项目","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.987Z","comments":true,"path":"api/articles/Linux/All Makefile/引用 Makefile 管理项目.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/T8XPlFvSMEoekdZ.jpg","text":"1.搭建简单项目在一个文件夹中新建两个.c文件和一个Makefile文件。Makefile作为 make 编译文件，.c是项目文件。 这里我们搭建一个main.c和mp3.c，main.c负责调用mp3.c的函数。 main.c： #include &lt;stdio.h&gt;...","link":"","photos":[],"count_time":{"symbolsCount":951,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Makefile 条件分支","uid":"88159cfabc3cfb4df8e657b47cee7663","slug":"Linux/All Makefile/条件分支/Makefile 条件分支","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.996Z","comments":true,"path":"api/articles/Linux/All Makefile/条件分支/Makefile 条件分支.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/358oGuXRbxgDFVc.jpg","text":"1.语法Makefile 中的条件分支很像 C 语言的 if-else，但是只能判断两个条件是否相等 记忆：-eq是 shell 判断是否相等的语法，ifeq就是两者结合 ifeq ($(变量),xxx) #判断变量是否等于 xxx Command #变量与 xxx 相等 els...","link":"","photos":[],"count_time":{"symbolsCount":465,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}