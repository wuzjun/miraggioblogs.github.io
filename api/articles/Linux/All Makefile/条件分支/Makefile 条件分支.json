{"title":"Makefile 条件分支","uid":"88159cfabc3cfb4df8e657b47cee7663","slug":"Linux/All Makefile/条件分支/Makefile 条件分支","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.996Z","comments":true,"path":"api/articles/Linux/All Makefile/条件分支/Makefile 条件分支.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/358oGuXRbxgDFVc.jpg","content":"<h1 id=\"1-语法\"><a href=\"#1-语法\" class=\"headerlink\" title=\"1.语法\"></a><strong>1.语法</strong></h1><p>Makefile 中的条件分支很像 C 语言的 if-else，但是只能判断两个条件是否相等</p>\n<p>记忆：<code>-eq</code>是 shell 判断是否相等的语法，<code>ifeq</code>就是两者结合</p>\n<pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">ifeq ($(变量),xxx)  #判断变量是否等于 xxx\n        Command      #变量与 xxx 相等\nelse\n        Command      #变量与 xxx 不等\nendif</code></pre>\n\n<h1 id=\"2-使用例子\"><a href=\"#2-使用例子\" class=\"headerlink\" title=\"2.使用例子\"></a><strong>2.使用例子</strong></h1><p>在之前编写的 Makefile 中，使用了 gcc 编译，但是后面有时需要切换成 Arm-gcc 编译，这时候就需要条件分支了。</p>\n<ul>\n<li>使用一个变量进行空赋值，可以做到变量要是终端处给值，程序里就不会赋值，就会执行另一个条件，反之亦然。  <pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">ARMH?&#x3D;x86\n\nifeq ($(ARMH),x86)\n        CC&#x3D;gcc\nelse\n        CC&#x3D;arm-linux-gnueabihf-gcc\nendif</code></pre>\n  这是在终端给值，Makefile 就会切换到 Arm-gcc 编译  <img src=\"/post/Linux/All%20Makefile/%E6%9D%A1%E4%BB%B6%E5%88%86%E6%94%AF/Makefile%20%E6%9D%A1%E4%BB%B6%E5%88%86%E6%94%AF/Untitled.png\" alt=\"Untitled\"></li>\n</ul>\n","text":"1.语法Makefile 中的条件分支很像 C 语言的 if-else，但是只能判断两个条件是否相等 记忆：-eq是 shell 判断是否相等的语法，ifeq就是两者结合 ifeq ($(变量),xxx) #判断变量是否等于 xxx Command #变量与 xxx 相等 els...","link":"","photos":[],"count_time":{"symbolsCount":465,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">1.语法</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8%E4%BE%8B%E5%AD%90\"><span class=\"toc-text\">2.使用例子</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Makefile 函数","uid":"2b7c34b21c0bac89a496b7554225c02a","slug":"Linux/All Makefile/Makefile 函数/Makefile_Fun","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.904Z","comments":true,"path":"api/articles/Linux/All Makefile/Makefile 函数/Makefile_Fun.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/cCGdo7tx2kPYjSH.jpg","text":"1. patsubst1.1. 基本语法 语法：模式替换函数—patsubst 1.2. 例程echo &quot;$(patsubst %.c,%.o,bar.c per.c io.c)&quot; 这里把字串“bar.c per.c io.c”中以 .c 结尾的单词替换成.o...","link":"","photos":[],"count_time":{"symbolsCount":"1k","symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Makefile 三要素","uid":"7e73016e8168ec045ffcfbbfdcf14bfd","slug":"Linux/All Makefile/三要素/Makefile 三要素","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.911Z","comments":true,"path":"api/articles/Linux/All Makefile/三要素/Makefile 三要素.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/lCHEMr1hDgP8QuS.jpg","text":"1. 三要素是什么目标、依赖、命令 2. 三要素关系 目标：依赖的文件或者是其他目标 命令1 命令2 … 3. 代码实现 创建三个命令 在终端输入以下命令，makefile 文件命名开头一般为大写字母 sodo vim Makefile #用 VIM 打开 Makefile 文件...","link":"","photos":[],"count_time":{"symbolsCount":390,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}