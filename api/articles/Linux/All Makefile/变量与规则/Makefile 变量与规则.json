{"title":"Makefile 变量与规则","uid":"41b42fc7bcab237c7248d722942ebc82","slug":"Linux/All Makefile/变量与规则/Makefile 变量与规则","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.916Z","comments":true,"path":"api/articles/Linux/All Makefile/变量与规则/Makefile 变量与规则.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/r9iyqpH1Y734duO.jpg","content":"<h1 id=\"1-系统变量\"><a href=\"#1-系统变量\" class=\"headerlink\" title=\"1.系统变量\"></a><strong>1.系统变量</strong></h1><ul>\n<li>例如：CC，AS，MAKE 是属于系统变量，代码如下  <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled.png\" alt=\"Untitled\"></li>\n</ul>\n<p>注意：与 Shell 引用不同<br>Makefile： $(xx)<br>Shell：${xx}</p>\n<h1 id=\"2-自定义变量\"><a href=\"#2-自定义变量\" class=\"headerlink\" title=\"2.自定义变量\"></a><strong>2.自定义变量</strong></h1><h2 id=\"2-1-延迟赋值\"><a href=\"#2-1-延迟赋值\" class=\"headerlink\" title=\"2.1.延迟赋值\"></a>2.1.延迟赋值</h2><p>延迟赋值：<code>=</code></p>\n<ul>\n<li>变量B 看上去是在变量A 第一次赋值之后，但是实际上是当变量B 被调用的时候，才会执行，此时变量A 已经是 500 了  <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled%201.png\" alt=\"Untitled\"></li>\n</ul>\n<h2 id=\"2-2-立即赋值\"><a href=\"#2-2-立即赋值\" class=\"headerlink\" title=\"2.2.立即赋值\"></a>2.2.立即赋值</h2><p>立即赋值：<code>:=</code></p>\n<ul>\n<li>在变量赋值时用上<code>:=</code>，可以直接赋值  <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled%202.png\" alt=\"Untitled\"></li>\n</ul>\n<h2 id=\"2-3-空赋值\"><a href=\"#2-3-空赋值\" class=\"headerlink\" title=\"2.3.空赋值\"></a>2.3.空赋值</h2><p>空赋值：<code>?=</code></p>\n<ul>\n<li>只有在变量为空的时候才可以赋值  <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled%203.png\" alt=\"Untitled\"></li>\n</ul>\n<h2 id=\"2-4-追加赋值\"><a href=\"#2-4-追加赋值\" class=\"headerlink\" title=\"2.4.追加赋值\"></a>2.4.追加赋值</h2><p>追加赋值<code>+=</code></p>\n<ul>\n<li>在变量被赋值情况下，可以接着在原来值后面追加赋值  <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled%204.png\" alt=\"Untitled\"></li>\n</ul>\n<h1 id=\"3-自动化变量\"><a href=\"#3-自动化变量\" class=\"headerlink\" title=\"3.自动化变量\"></a><strong>3.自动化变量</strong></h1><ol>\n<li><code>$&lt;</code><ul>\n<li>代表第一个依赖文件<br>  <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled%205.png\" alt=\"Untitled\"><br>&nbsp;</li>\n</ul>\n</li>\n<li><code>$^</code><ul>\n<li>代表全部依赖文件<br>  <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled%206.png\" alt=\"Untitled\"><br>&nbsp;</li>\n</ul>\n</li>\n<li><code>$@</code><ul>\n<li>代表目标<br>  <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled%207.png\" alt=\"Untitled\"></li>\n</ul>\n</li>\n</ol>\n<h1 id=\"4-使用变量优化-makefile\"><a href=\"#4-使用变量优化-makefile\" class=\"headerlink\" title=\"4.使用变量优化 makefile\"></a><strong>4.使用变量优化 makefile</strong></h1><p>类似 C 语言的宏定义思想，用变量将某些重复命令存起来。</p>\n<ul>\n<li><p>这是优化后的版本：</p>\n  <pre class=\"line-numbers language-makefile\" data-language=\"makefile\"><code class=\"language-makefile\">CC&#x3D;gcc\nOBJS&#x3D;mp3.o main.o\n\nall:$(OBJS)\n        $(CC) $^ -o mp3\n\nmain.o:main.c\n        $(CC) -c $&lt; -o main.o\n        echo &quot;make main&quot;\n\nmp3.o:mp3.c\n        $(CC) -c $&lt; -o mp3.o\n        echo &quot;make mp3&quot;</code></pre></li>\n</ul>\n<p>使用模式规则后更能进一步优化。</p>\n<h1 id=\"5-模式规则优化-makefile\"><a href=\"#5-模式规则优化-makefile\" class=\"headerlink\" title=\"5.模式规则优化 makefile\"></a><strong>5.模式规则优化 makefile</strong></h1><ol>\n<li><code>%</code><br> 匹配任意多个非空字符（占位符） <pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">%:\n        echo &quot;$@&quot;</code></pre>\n 运行结果（空格默认下一个输出）：<br> <img src=\"/post/Linux/All%20Makefile/%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Makefile%20%E5%8F%98%E9%87%8F%E4%B8%8E%E8%A7%84%E5%88%99/Untitled%208.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li>默认规则<br> <code>.o</code>文件默认使用 <code>.c</code>文件来进行编译</li>\n</ol>\n<p>最终优化成果：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">CC&#x3D;gcc\nTARGET&#x3D;mp3\nOBJS&#x3D;mp3.o main.o\n\n$(TARGET):$(OBJS)\n        $(CC) $^ -o $@</code></pre>","text":"1.系统变量 例如：CC，AS，MAKE 是属于系统变量，代码如下 注意：与 Shell 引用不同Makefile： $(xx)Shell：${xx} 2.自定义变量2.1.延迟赋值延迟赋值：= 变量B 看上去是在变量A 第一次赋值之后，但是实际上是当变量B 被调用的时候，才会执...","link":"","photos":[],"count_time":{"symbolsCount":859,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E7%B3%BB%E7%BB%9F%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">1.系统变量</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E8%87%AA%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.自定义变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%BB%B6%E8%BF%9F%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">2.1.延迟赋值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E7%AB%8B%E5%8D%B3%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">2.2.立即赋值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-3-%E7%A9%BA%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">2.3.空赋值</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-4-%E8%BF%BD%E5%8A%A0%E8%B5%8B%E5%80%BC\"><span class=\"toc-text\">2.4.追加赋值</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E8%87%AA%E5%8A%A8%E5%8C%96%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">3.自动化变量</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F%E4%BC%98%E5%8C%96-makefile\"><span class=\"toc-text\">4.使用变量优化 makefile</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E6%A8%A1%E5%BC%8F%E8%A7%84%E5%88%99%E4%BC%98%E5%8C%96-makefile\"><span class=\"toc-text\">5.模式规则优化 makefile</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Makefile 三要素","uid":"7e73016e8168ec045ffcfbbfdcf14bfd","slug":"Linux/All Makefile/三要素/Makefile 三要素","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.911Z","comments":true,"path":"api/articles/Linux/All Makefile/三要素/Makefile 三要素.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/lCHEMr1hDgP8QuS.jpg","text":"1. 三要素是什么目标、依赖、命令 2. 三要素关系 目标：依赖的文件或者是其他目标 命令1 命令2 … 3. 代码实现 创建三个命令 在终端输入以下命令，makefile 文件命名开头一般为大写字母 sodo vim Makefile #用 VIM 打开 Makefile 文件...","link":"","photos":[],"count_time":{"symbolsCount":390,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Makefile 编译工程","uid":"c22a4f1df3d378140aa51aa8ca0097a3","slug":"Linux/All Makefile/总工程/Makefile 编译工程","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.988Z","comments":true,"path":"api/articles/Linux/All Makefile/总工程/Makefile 编译工程.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/aJPDzOkA5dBSWXQ.jpg","text":"1.编译初级工程一般工程，会把文件按类别分文件夹存放。可以把生成的文件也用一个文件夹存起来，编译文件在提交或者备份都是不需要的，可以删除。 按照这种思路，结合之前学习的知识，对之前main.c和mp3.c工程进行修改。 1.1.把文件归档 首先创建module1和module2两...","link":"","photos":[],"count_time":{"symbolsCount":"4.3k","symbolsTime":"4 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}