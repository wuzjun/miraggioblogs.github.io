{"title":"Makefile 三要素","uid":"7e73016e8168ec045ffcfbbfdcf14bfd","slug":"Linux/All Makefile/三要素/Makefile 三要素","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.911Z","comments":true,"path":"api/articles/Linux/All Makefile/三要素/Makefile 三要素.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/lCHEMr1hDgP8QuS.jpg","content":"<h1 id=\"1-三要素是什么\"><a href=\"#1-三要素是什么\" class=\"headerlink\" title=\"1. 三要素是什么\"></a><strong>1. 三要素是什么</strong></h1><p>目标、依赖、命令</p>\n<h1 id=\"2-三要素关系\"><a href=\"#2-三要素关系\" class=\"headerlink\" title=\"2. 三要素关系\"></a><strong>2. 三要素关系</strong></h1><ul>\n<li>目标：依赖的文件或者是其他目标  <tab>命令1  <tab>命令2  <tab>…</tab></tab></tab></li>\n</ul>\n<h1 id=\"3-代码实现\"><a href=\"#3-代码实现\" class=\"headerlink\" title=\"3. 代码实现\"></a><strong>3. 代码实现</strong></h1><ul>\n<li>创建三个命令<br>  在终端输入以下命令，makefile 文件命名开头一般为大写字母  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sodo vim Makefile #用 VIM 打开 Makefile 文件（没有就创建一个）</code></pre>\n  <img src=\"/post/Linux/All%20Makefile/%E4%B8%89%E8%A6%81%E7%B4%A0/Makefile%20%E4%B8%89%E8%A6%81%E7%B4%A0/Untitled.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li>输出结果<br>  <img src=\"/post/Linux/All%20Makefile/%E4%B8%89%E8%A6%81%E7%B4%A0/Makefile%20%E4%B8%89%E8%A6%81%E7%B4%A0/Untitled%201.png\" alt=\"Untitled\"><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意：要是提示<code>make</code>命令不存在，执行安装命令</p>\n<pre><code>  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">sudo apt install make</code></pre>\n</code></pre></blockquote>\n</li>\n</ul>\n<h1 id=\"4-同名文件\"><a href=\"#4-同名文件\" class=\"headerlink\" title=\"4. 同名文件\"></a><strong>4. 同名文件</strong></h1><ul>\n<li>若文件名与命令名相同，会先执行文件的内容。<br>  我们在同一个文件夹内创建与命令同样名字的文件，例如创建一个 targetb<br>  <img src=\"/post/Linux/All%20Makefile/%E4%B8%89%E8%A6%81%E7%B4%A0/Makefile%20%E4%B8%89%E8%A6%81%E7%B4%A0/Untitled%202.png\" alt=\"Untitled\"><br>  会自动执行 tatgetb 中内容。<br>  <img src=\"/post/Linux/All%20Makefile/%E4%B8%89%E8%A6%81%E7%B4%A0/Makefile%20%E4%B8%89%E8%A6%81%E7%B4%A0/Untitled%203.png\" alt=\"Untitled\"><br>  由于文件是空的，可以看出 nihao2 并没有输出<br>&nbsp;</li>\n<li>在不删除文件情况下，加入指定伪目标<ul>\n<li>在代码中添加<code>.PHONY: xxx</code>就可以了<br>  <img src=\"/post/Linux/All%20Makefile/%E4%B8%89%E8%A6%81%E7%B4%A0/Makefile%20%E4%B8%89%E8%A6%81%E7%B4%A0/Untitled%204.png\" alt=\"Untitled\"></li>\n</ul>\n</li>\n</ul>\n","text":"1. 三要素是什么目标、依赖、命令 2. 三要素关系 目标：依赖的文件或者是其他目标 命令1 命令2 … 3. 代码实现 创建三个命令 在终端输入以下命令，makefile 文件命名开头一般为大写字母 sodo vim Makefile #用 VIM 打开 Makefile 文件...","link":"","photos":[],"count_time":{"symbolsCount":390,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E4%B8%89%E8%A6%81%E7%B4%A0%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">1. 三要素是什么</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E4%B8%89%E8%A6%81%E7%B4%A0%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">2. 三要素关系</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">3. 代码实现</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E5%90%8C%E5%90%8D%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">4. 同名文件</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Makefile 条件分支","uid":"88159cfabc3cfb4df8e657b47cee7663","slug":"Linux/All Makefile/条件分支/Makefile 条件分支","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.996Z","comments":true,"path":"api/articles/Linux/All Makefile/条件分支/Makefile 条件分支.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/358oGuXRbxgDFVc.jpg","text":"1.语法Makefile 中的条件分支很像 C 语言的 if-else，但是只能判断两个条件是否相等 记忆：-eq是 shell 判断是否相等的语法，ifeq就是两者结合 ifeq ($(变量),xxx) #判断变量是否等于 xxx Command #变量与 xxx 相等 els...","link":"","photos":[],"count_time":{"symbolsCount":465,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Makefile 变量与规则","uid":"41b42fc7bcab237c7248d722942ebc82","slug":"Linux/All Makefile/变量与规则/Makefile 变量与规则","date":"2022-02-05T12:49:36.000Z","updated":"2022-02-20T12:58:29.916Z","comments":true,"path":"api/articles/Linux/All Makefile/变量与规则/Makefile 变量与规则.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/r9iyqpH1Y734duO.jpg","text":"1.系统变量 例如：CC，AS，MAKE 是属于系统变量，代码如下 注意：与 Shell 引用不同Makefile： $(xx)Shell：${xx} 2.自定义变量2.1.延迟赋值延迟赋值：= 变量B 看上去是在变量A 第一次赋值之后，但是实际上是当变量B 被调用的时候，才会执...","link":"","photos":[],"count_time":{"symbolsCount":859,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"Makefile","slug":"Makefile","count":7,"path":"api/tags/Makefile.json"},{"name":"编译","slug":"编译","count":7,"path":"api/tags/编译.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}