{"title":"Shell 脚本编程","uid":"ec8795976dd54e672a91a9531ed19b16","slug":"Linux/Shell/Shell 脚本编程","date":"2022-02-04T12:49:36.000Z","updated":"2022-02-20T12:58:30.002Z","comments":true,"path":"api/articles/Linux/Shell/Shell 脚本编程.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/qbhtZiKgwlmypDF.jpg","content":"<h1 id=\"1-C-语言脚本\"><a href=\"#1-C-语言脚本\" class=\"headerlink\" title=\"1.C 语言脚本\"></a><strong>1.C 语言脚本</strong></h1><h2 id=\"1-1-编写运行脚本\"><a href=\"#1-1-编写运行脚本\" class=\"headerlink\" title=\"1.1.编写运行脚本\"></a>1.1.编写运行脚本</h2><ol>\n<li>用 vim 编写一个 .c 文件<br> <code>sudo vim hello.c</code> <pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\nint main()\n&#123;\n   printf(&quot;hello_world_212&quot;);\n   return 0;\n&#125;</code></pre>\n&nbsp;</li>\n<li>使用 gcc 编译<ul>\n<li>gcc使用<br>  gcc [选项][文件名字]<br>  gcc xxx.c -o main 编译且链接成为main（常用）<br><code>gcc hello.c -o hello</code><br>&nbsp;</li>\n</ul>\n</li>\n<li>执行编译后文件<br> <code>./hello</code></li>\n</ol>\n<h2 id=\"1-2-移动脚本\"><a href=\"#1-2-移动脚本\" class=\"headerlink\" title=\"1.2.移动脚本\"></a>1.2.移动脚本</h2><p>上诉是把脚本生成了，但是需要命令</p>\n<ol>\n<li>接下来可以查询环境变量：<br> <code>echo $PATH</code> <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li>把编译后文件移动到其中一个文件夹<br> <code>sudo mv hello /usr/bin/</code><br>&nbsp;</li>\n<li>直接在终端里打 hello，可以运行</li>\n</ol>\n<h1 id=\"2-Shell-脚本语法\"><a href=\"#2-Shell-脚本语法\" class=\"headerlink\" title=\"2.Shell 脚本语法\"></a><strong>2.Shell 脚本语法</strong></h1><h2 id=\"2-1-定义变量\"><a href=\"#2-1-定义变量\" class=\"headerlink\" title=\"2.1.定义变量\"></a>2.1.定义变量</h2><ul>\n<li>variable1=value</li>\n<li>variable2=‘value’</li>\n<li>variable3=“value”</li>\n</ul>\n<h3 id=\"2-1-1-适用范围\"><a href=\"#2-1-1-适用范围\" class=\"headerlink\" title=\"2.1.1.适用范围\"></a>2.1.1.适用范围</h3><ul>\n<li>variable1  当 <code>value</code> 为 123abc 时，直接调用 echo 可以打印到终端。  <code>value</code> 里有符号，例如空格符这些，就不能正常打印。<br>&nbsp;</li>\n<li>variable2  <code>value</code> 有字符也可以打印出来。  其实将字符原封不动的输出来。但涉及有要引用别的变量输出的时候，这个时候就不可以了。  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%201.png\" alt=\"Untitled\">  可以看到输出不是我们想要的<br>&nbsp;</li>\n<li>variable3  在上面基础上，是可以引用变量内容并打印出来  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%202.png\" alt=\"Untitled\"></li>\n</ul>\n<h2 id=\"2-2-使用变量\"><a href=\"#2-2-使用变量\" class=\"headerlink\" title=\"2.2.使用变量\"></a>2.2.使用变量</h2><ul>\n<li>$variable</li>\n<li>${variable}</li>\n</ul>\n<p><code>$variable</code> 这种直接使用变量出来，但是想在后面添加东西就不可以了，因为会识别成一个新的变量。</p>\n<p>这种 <code>$&#123;variable&#125;</code> 这种是等于把变量框出来使用，要是想再后面打印别的字符也可以继续添加。</p>\n<p><img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%203.png\" alt=\"Untitled\"></p>\n<h2 id=\"2-3-将命令结果赋给变量\"><a href=\"#2-3-将命令结果赋给变量\" class=\"headerlink\" title=\"2.3.将命令结果赋给变量\"></a>2.3.将命令结果赋给变量</h2><ul>\n<li>variable=<code>command</code>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%204.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li>variable=$(command)  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%205.png\" alt=\"Untitled\"></li>\n</ul>\n<h2 id=\"2-4-删除变量\"><a href=\"#2-4-删除变量\" class=\"headerlink\" title=\"2.4.删除变量\"></a>2.4.删除变量</h2><ul>\n<li>unset variable</li>\n</ul>\n<h2 id=\"2-5-特殊变量\"><a href=\"#2-5-特殊变量\" class=\"headerlink\" title=\"2.5.特殊变量\"></a>2.5.特殊变量</h2><p>注意：使用时可能会提醒权限不够</p>\n<ul>\n<li>解决方法：对其赋权限  <pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">chmod 777 .&#x2F;start.sh</code></pre></li>\n</ul>\n<h3 id=\"2-5-1-x-变量\"><a href=\"#2-5-1-x-变量\" class=\"headerlink\" title=\"2.5.1.$x 变量\"></a>2.5.1.$x 变量</h3><table>\n<thead>\n<tr>\n<th>变量</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$0</td>\n<td>当前脚本文件名</td>\n</tr>\n<tr>\n<td>$n（n≥1）</td>\n<td>传递给脚本或函数的参数</td>\n</tr>\n<tr>\n<td>$#</td>\n<td>传递给脚本或函数的参数个数</td>\n</tr>\n<tr>\n<td>$*</td>\n<td>传递给脚本或函数的所有参数</td>\n</tr>\n<tr>\n<td>$@</td>\n<td>传递给脚本或函数的所有参数。当被双引号包含时，$@与$*有所不同</td>\n</tr>\n<tr>\n<td>$?</td>\n<td>上个命令的退出状态或者获取函数返回值</td>\n</tr>\n<tr>\n<td>$$</td>\n<td>当前 Shell 进程 ID。对于 Shell 脚本，就是这些脚本所在的进程 ID。</td>\n</tr>\n</tbody></table>\n<ul>\n<li>$0 和 $n<br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%206.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li>$#<br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%207.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li>$*<br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%208.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li>$?<br>  $? 是要配合着 exit 使用<br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%209.png\" alt=\"Untitled\"><br>  可以看到终端打印出了一次进程返回值后，会进行清零<br>&nbsp;</li>\n<li>$$<br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2010.png\" alt=\"Untitled\"></li>\n</ul>\n<h3 id=\"2-5-2-读取从键盘输入数据\"><a href=\"#2-5-2-读取从键盘输入数据\" class=\"headerlink\" title=\"2.5.2.读取从键盘输入数据\"></a>2.5.2.读取从键盘输入数据</h3><ul>\n<li><code>read</code><br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2011.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li><code>read -p</code><br>  可以在后面填写字符<br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2012.png\" alt=\"Untitled\"></li>\n</ul>\n<h3 id=\"2-5-3-退出当前进程\"><a href=\"#2-5-3-退出当前进程\" class=\"headerlink\" title=\"2.5.3.退出当前进程\"></a>2.5.3.退出当前进程</h3><p><code>exit</code></p>\n<p>既可以直接退出进程，也可以在退出进程的时候返回一个值</p>\n<p>注意：exit 返回值只能是数字，范围是 0~255。比 255 大会直接溢出，例如 256 是 0。</p>\n<h3 id=\"2-5-4-对整数进行数学运算\"><a href=\"#2-5-4-对整数进行数学运算\" class=\"headerlink\" title=\"2.5.4.对整数进行数学运算\"></a>2.5.4.对整数进行数学运算</h3><p><code>$(( xxx ))</code></p>\n<p><img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2013.png\" alt=\"Untitled\"></p>\n<p>简单加减乘除都没问题</p>\n<h3 id=\"2-5-5-逻辑与-或\"><a href=\"#2-5-5-逻辑与-或\" class=\"headerlink\" title=\"2.5.5.逻辑与/或\"></a>2.5.5.逻辑与/或</h3><p>逻辑与或都按照 “最短逻辑判定”</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>command1 &amp;&amp; command2</code>     #command1假如为假，command2是不会执行<br><code>command1 || command2</code>     #command1假如为真，command2是不会执行</p></blockquote>\n<p><img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2014.png\" alt=\"Untitled\"></p>\n<p>图中 -eq 是判断 a 和 b 的值是否相等，下面继续讲。</p>\n<h3 id=\"2-5-6-判断条件是否成立\"><a href=\"#2-5-6-判断条件是否成立\" class=\"headerlink\" title=\"2.5.6.判断条件是否成立\"></a>2.5.6.判断条件是否成立</h3><p><code>test expression</code> 和 <code>[ expression ]</code></p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>-eq</td>\n<td>判断数值是否相等</td>\n</tr>\n<tr>\n<td>-ne</td>\n<td>判断数值是否不相等</td>\n</tr>\n<tr>\n<td>-gt</td>\n<td>判断数值是否大于</td>\n</tr>\n<tr>\n<td>-lt</td>\n<td>判断数值是否小于</td>\n</tr>\n<tr>\n<td>-ge</td>\n<td>判断数值是否大于等于</td>\n</tr>\n<tr>\n<td>-le</td>\n<td>判断数值是否小于等于</td>\n</tr>\n<tr>\n<td>-z str</td>\n<td>判断字符串 str 是否为空</td>\n</tr>\n<tr>\n<td>-n str</td>\n<td>判断字符串 str 是否为非空</td>\n</tr>\n<tr>\n<td>=和==</td>\n<td>判断字符串 str 是否相等</td>\n</tr>\n<tr>\n<td>-d filename</td>\n<td>判断文件是否存在，并且是否为目录文件</td>\n</tr>\n<tr>\n<td>-f filename</td>\n<td>判断文件是否存在，并且是否为普通文件</td>\n</tr>\n</tbody></table>\n<p>判断字符和字符串一样的，上面已经讲了。</p>\n<ul>\n<li>判断文件目录如下：<br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2015.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li>判断文件如下：<br>  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2016.png\" alt=\"Untitled\">  <img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2017.png\" alt=\"Untitled\"></li>\n</ul>\n<h2 id=\"2-6-运算规则\"><a href=\"#2-6-运算规则\" class=\"headerlink\" title=\"2.6.运算规则\"></a>2.6.运算规则</h2><h3 id=\"2-6-1-管道\"><a href=\"#2-6-1-管道\" class=\"headerlink\" title=\"2.6.1.管道\"></a>2.6.1.管道</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>command1 | command2</code>    #command1作为command2的输入指令，command1正确才可以</p></blockquote>\n<p><img src=\"/post/Linux/Shell/Shell%20%E8%84%9A%E6%9C%AC%E7%BC%96%E7%A8%8B/Untitled%2018.png\" alt=\"Untitled\"></p>\n<h3 id=\"2-6-2-if\"><a href=\"#2-6-2-if\" class=\"headerlink\" title=\"2.6.2.if\"></a>2.6.2.if</h3><ul>\n<li>if 语法：  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">if [ condition ]; then\n     # if body\nfi</code></pre>\n&nbsp;</li>\n<li>if-else:  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">if [ condition ]; then\n     # if body\nelse\n     # else body\nfi</code></pre>\n&nbsp;</li>\n<li>if-elseif-else:  <pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">if [ condition ]; then\n     # if body\nelif [ condition ]; then\n     # else if body\nelse\n     # else body\nfi</code></pre></li>\n</ul>\n<h3 id=\"2-6-3-for\"><a href=\"#2-6-3-for\" class=\"headerlink\" title=\"2.6.3.for\"></a>2.6.3.for</h3><p>可以理解成：in 后面的值会按顺序赋值给item，in 后面可以添加许多东西，包括数字范围，文件目录。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#按顺序输出内容\nfor item in &#123;&quot;Hello World!&quot;,$a,$b,1372&#125;; do\n    echo &quot;$&#123;item&#125;&quot;\ndone\n\n#输出范围\nfor item in &#123;1..10&#125;; do\n    echo &quot;$&#123;item&#125;&quot;\ndone</code></pre>\n\n<h3 id=\"2-6-4-while\"><a href=\"#2-6-4-while\" class=\"headerlink\" title=\"2.6.4.while\"></a>2.6.4.while</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">while (( $n&lt;10 )); do\n   echo &quot;$&#123;n&#125;&quot;\n    n&#x3D;$((n+1));\ndone</code></pre>\n\n<p>上诉例子是输出0～9数字</p>\n<h3 id=\"2-6-5-函数\"><a href=\"#2-6-5-函数\" class=\"headerlink\" title=\"2.6.5.函数\"></a>2.6.5.函数</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">function my_name () &#123;\n    echo &quot;sanhduikjbas&quot; \n&#125;\n\nmy_name</code></pre>\n\n<p>直接调用函数名就可以</p>\n<h1 id=\"参考与致谢\"><a href=\"#参考与致谢\" class=\"headerlink\" title=\"参考与致谢\"></a><strong>参考与致谢</strong></h1><ul>\n<li><a href=\"https://blog.csdn.net/this_capslock/article/details/17415409\">权限不够的解决办法</a><br>&nbsp;</li>\n<li><a href=\"https://www.cnblogs.com/ider/archive/2011/09/28/condition_statement_with_logical_conjunction_and_disconjunction.html\">利用C的&amp;&amp;(逻辑与)和||(逻辑或)设计三元分支运算符</a></li>\n</ul>\n","text":"1.C 语言脚本1.1.编写运行脚本 用 vim 编写一个 .c 文件 sudo vim hello.c #include &lt;stdio.h&gt; int main() &#123; printf(&quot;hello_world_212&quot;); return ...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"嵌入式Linux","slug":"嵌入式Linux","count":9,"path":"api/tags/嵌入式Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-C-%E8%AF%AD%E8%A8%80%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">1.C 语言脚本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E7%BC%96%E5%86%99%E8%BF%90%E8%A1%8C%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">1.1.编写运行脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E7%A7%BB%E5%8A%A8%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">1.2.移动脚本</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-Shell-%E8%84%9A%E6%9C%AC%E8%AF%AD%E6%B3%95\"><span class=\"toc-text\">2.Shell 脚本语法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E5%AE%9A%E4%B9%89%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.1.定义变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-1-%E9%80%82%E7%94%A8%E8%8C%83%E5%9B%B4\"><span class=\"toc-text\">2.1.1.适用范围</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E4%BD%BF%E7%94%A8%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.2.使用变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-3-%E5%B0%86%E5%91%BD%E4%BB%A4%E7%BB%93%E6%9E%9C%E8%B5%8B%E7%BB%99%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.3.将命令结果赋给变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-4-%E5%88%A0%E9%99%A4%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.4.删除变量</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-5-%E7%89%B9%E6%AE%8A%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.5.特殊变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-1-x-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">2.5.1.$x 变量</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-2-%E8%AF%BB%E5%8F%96%E4%BB%8E%E9%94%AE%E7%9B%98%E8%BE%93%E5%85%A5%E6%95%B0%E6%8D%AE\"><span class=\"toc-text\">2.5.2.读取从键盘输入数据</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-3-%E9%80%80%E5%87%BA%E5%BD%93%E5%89%8D%E8%BF%9B%E7%A8%8B\"><span class=\"toc-text\">2.5.3.退出当前进程</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-4-%E5%AF%B9%E6%95%B4%E6%95%B0%E8%BF%9B%E8%A1%8C%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97\"><span class=\"toc-text\">2.5.4.对整数进行数学运算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-5-%E9%80%BB%E8%BE%91%E4%B8%8E-%E6%88%96\"><span class=\"toc-text\">2.5.5.逻辑与&#x2F;或</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-5-6-%E5%88%A4%E6%96%AD%E6%9D%A1%E4%BB%B6%E6%98%AF%E5%90%A6%E6%88%90%E7%AB%8B\"><span class=\"toc-text\">2.5.6.判断条件是否成立</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-6-%E8%BF%90%E7%AE%97%E8%A7%84%E5%88%99\"><span class=\"toc-text\">2.6.运算规则</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-1-%E7%AE%A1%E9%81%93\"><span class=\"toc-text\">2.6.1.管道</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-2-if\"><span class=\"toc-text\">2.6.2.if</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-3-for\"><span class=\"toc-text\">2.6.3.for</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-4-while\"><span class=\"toc-text\">2.6.4.while</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-6-5-%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2.6.5.函数</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E4%B8%8E%E8%87%B4%E8%B0%A2\"><span class=\"toc-text\">参考与致谢</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"安装 Ubuntu 系统","uid":"9abc5569b0fad9372ca1882359d96139","slug":"Linux/Ubuntu 系统/安装 Ubuntu 系统","date":"2022-02-04T12:49:36.000Z","updated":"2022-02-11T15:03:01.683Z","comments":true,"path":"api/articles/Linux/Ubuntu 系统/安装 Ubuntu 系统.json","keywords":null,"cover":"https://s2.loli.net/2022/02/11/C8gx7cZYOmUfraK.jpg","text":"1.虚拟机1.1.安装虚拟机下载了 .exe 后，双击一直点 next 即可（路径可以自行修改） 1.2.配置虚拟机1.2.1.全局路径 点击全局设定，可以修改存放路径。 1.2.2.新建环境 名称和类型 内存 虚拟硬盘 创建后让你选择类型 之后选择分配方式 最后设置极限大小 1...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"嵌入式Linux","slug":"嵌入式Linux","count":9,"path":"api/tags/嵌入式Linux.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"认识Linux命令行","uid":"bb6f078220a01300180b338ffe92a677","slug":"Linux/命令行/认识Linux命令行","date":"2022-02-04T12:49:36.000Z","updated":"2022-02-20T12:58:30.059Z","comments":true,"path":"api/articles/Linux/命令行/认识Linux命令行.json","keywords":null,"cover":"https://s2.loli.net/2022/02/14/HrGgqEV86SheOpJ.jpg","text":"1.命令行在早期的Unix系统与用户就是通过 Shell 进行交互的，如下图所示，Shell 对外接受用户输入的命令， 对内通过“系统调用”传递给内核，内核执行操作后把输出通过 Shell 呈现给用户，也就是说，Shell 就是一个中间人。而 Shell 的英文原意“壳”，也是为...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"嵌入式Linux","slug":"嵌入式Linux","count":9,"path":"api/tags/嵌入式Linux.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}