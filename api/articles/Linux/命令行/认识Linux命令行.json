{"title":"认识Linux命令行","uid":"bb6f078220a01300180b338ffe92a677","slug":"Linux/命令行/认识Linux命令行","date":"2022-02-04T12:49:36.000Z","updated":"2022-02-20T12:58:30.059Z","comments":true,"path":"api/articles/Linux/命令行/认识Linux命令行.json","keywords":null,"cover":"https://s2.loli.net/2022/02/14/HrGgqEV86SheOpJ.jpg","content":"<h1 id=\"1-命令行\"><a href=\"#1-命令行\" class=\"headerlink\" title=\"1.命令行\"></a><strong>1.命令行</strong></h1><p>在早期的Unix系统与用户就是通过 Shell 进行交互的，如下图所示，Shell 对外接受用户输入的命令， 对内通过“系统调用”传递给内核，内核执行操作后把输出通过 Shell 呈现给用户，也就是说，Shell 就是一个中间人。而 Shell 的英文原意“壳”，也是为了把它与内核区分开来。</p>\n<p><img src=\"/post/Linux/%E5%91%BD%E4%BB%A4%E8%A1%8C/%E8%AE%A4%E8%AF%86Linux%E5%91%BD%E4%BB%A4%E8%A1%8C/Untitled.png\" alt=\"Untitled\"></p>\n<ul>\n<li>Shell：指命令行解释器，常见的解释器有 bash，sh，在 Ubuntu 系统默认用的是 bash 解释器，所以有时说 bash 也是指命令行。<br>&nbsp;</li>\n<li>终端（Terminal）：通常指用来运行 Shell 的程序，示场景的不同有不一样的名称，如 Ubuntu 系统自带的叫本地终端，嵌入式开发板常常提供串口进行输入输出的串口终端，通过网络访问的 ssh 终端。<br>&nbsp;</li>\n<li>控制台（Console）：特指某些终端，通常是指它的物理形态，如带键盘和显示器的物理设备。</li>\n</ul>\n<h1 id=\"2-打开终端\"><a href=\"#2-打开终端\" class=\"headerlink\" title=\"2.打开终端\"></a><strong>2.打开终端</strong></h1><ol>\n<li>按 <code>Ctrl</code>+<code>Alt</code>+<code>T</code> 键，即可打开终端。</li>\n<li>点桌面搜索框，输入“terminal”</li>\n<li>在桌面点击鼠标右键，选择“打开终端”</li>\n</ol>\n<h1 id=\"3-命令提示符\"><a href=\"#3-命令提示符\" class=\"headerlink\" title=\"3.命令提示符\"></a><strong>3.命令提示符</strong></h1><h2 id=\"3-1-命令解释\"><a href=\"#3-1-命令解释\" class=\"headerlink\" title=\"3.1.命令解释\"></a>3.1.命令解释</h2><ul>\n<li>打开终端后：<br>  <img src=\"/post/Linux/%E5%91%BD%E4%BB%A4%E8%A1%8C/%E8%AE%A4%E8%AF%86Linux%E5%91%BD%E4%BB%A4%E8%A1%8C/Untitled%201.png\" alt=\"Untitled\"></li>\n</ul>\n<p>其中各个符号解释如下：</p>\n<ul>\n<li>第一个miraggio：在<code>@</code>符号左边，表示当前登录用户</li>\n<li>“@”：分割符号（可以理解为 at，表示 xx用户 at 主机xx 上）</li>\n<li>第二个miraggio：在<code>@</code>符号右边，表示当前系统主机名字</li>\n<li>“:”：分割符号，后面表示用户当前所在的目录</li>\n<li>“~”：表示当前用户家目录</li>\n<li>“$”：命令提示符，表示用户权限等级  $ 表示普通用户，# 表示超级用户</li>\n</ul>\n<h2 id=\"3-2-命令尝试\"><a href=\"#3-2-命令尝试\" class=\"headerlink\" title=\"3.2.命令尝试\"></a>3.2.命令尝试</h2><pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"># 在后面的说明中，#号表示注释，它后面的内容不要输入到终端中\n# 在后面的说明中，#号表示注释，它后面的内容不要输入到终端中\n# 从下面开始是你要在终端中输入的命令（不包括#号后的内容）：\n\ncd &#x2F;home    # 切换到&#x2F;home目录\npwd         # 显示当前目录\ncd ~        # 切换至~目录\npwd         # 显示当前目录\nls          # 该命令表示列出当前目录下的内容\nls -l       # 该选项表示以列表的形式列出目录下的详细内容</code></pre>\n\n<ul>\n<li>各命令执行截图：<br>  <img src=\"/post/Linux/%E5%91%BD%E4%BB%A4%E8%A1%8C/%E8%AE%A4%E8%AF%86Linux%E5%91%BD%E4%BB%A4%E8%A1%8C/Untitled%202.png\" alt=\"Untitled\"></li>\n</ul>\n<h1 id=\"4-命令格式与帮助\"><a href=\"#4-命令格式与帮助\" class=\"headerlink\" title=\"4.命令格式与帮助\"></a><strong>4.命令格式与帮助</strong></h1><h2 id=\"4-1-命令的格式\"><a href=\"#4-1-命令的格式\" class=\"headerlink\" title=\"4.1.命令的格式\"></a>4.1.命令的格式</h2><pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">command [-options] [argument]</code></pre>\n\n<ul>\n<li>command：命令名，如前面的cd命令，pwd命令，ls命令。<br>&nbsp;</li>\n<li>options：命令的选项，使用“-”开头的或“–”开头，如前面示例“ls -l”中的-l选项， 命令会根据具体的选项执行不同的操作。使用“-”时一般是选项的简写， 一些选项可以同时使用，“ls -la”等价于“ls -l -a”，即同时使用“l”和“a”选项。 而“–”一般后面带选项的全名，如“ls -a”等价于“ls –all”。<br>&nbsp;</li>\n<li>argument：命令参数，如前面cd命令中以“/home”可“~”参数作为路径名。</li>\n</ul>\n<p>在命令格式中，使用“[ ]”括起来的内容表示它不是要求必需的，例如前面使用时cd命令时没有带选项， 使用pwd命令不带选项及参数。</p>\n<h2 id=\"4-2-命令的帮助\"><a href=\"#4-2-命令的帮助\" class=\"headerlink\" title=\"4.2.命令的帮助\"></a>4.2.命令的帮助</h2><pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">command --help</code></pre>\n\n<ul>\n<li><p>例如使用 <code>ls --help</code><br>  <img src=\"/post/Linux/%E5%91%BD%E4%BB%A4%E8%A1%8C/%E8%AE%A4%E8%AF%86Linux%E5%91%BD%E4%BB%A4%E8%A1%8C/Untitled%203.png\" alt=\"Untitled\"></p>\n<p>  从上图中圈出来的地方，可以知道参数a可以只列出隐藏的内容。<br>&nbsp;</p>\n</li>\n<li><p>现在执行命令：<code>ls –a</code><br>  <img src=\"https://doc.embedfire.com/linux/imx6/base/zh/latest/_images/comman011.png\" alt=\"https://doc.embedfire.com/linux/imx6/base/zh/latest/_images/comman011.png\"></p>\n<p>  从上图中可看到该执行后比直接用“ls”命令多列出了很多以“.”开头的内容， 在Linux下以“.”开头命名的文件或目录默认为隐藏文件，而ls的“-a”选项可以把它们显示出来。</p>\n</li>\n</ul>\n<h2 id=\"4-3-自动补全\"><a href=\"#4-3-自动补全\" class=\"headerlink\" title=\"4.3.自动补全\"></a>4.3.自动补全</h2><p>有些时候我们甚至连命令的全称都想不起来，这时可以用到命令行的自动补全功能。就是键盘上神奇的 “Tab” 键。</p>\n<ul>\n<li>按一下 “Tab” 键时如果只有一个匹配的内容时它会自动补全，按两下 “Tab” 键则会列出所有的匹配项。<br>&nbsp;</li>\n<li>“Tab”键除了用来补全命令名，还可以自动补全路径。</li>\n</ul>\n<h2 id=\"4-4-命令的退出与取消\"><a href=\"#4-4-命令的退出与取消\" class=\"headerlink\" title=\"4.4.命令的退出与取消\"></a>4.4.命令的退出与取消</h2><p>在应用中我们有时会想要中止命令的执行，或者命令输入到一半的时候觉得输错了不想继续， 这时我们都可以通过 <code>Ctrl+c</code> 的组合键来结束。</p>\n<p>使用介绍：</p>\n<ul>\n<li>打断正在执行命令<br>&nbsp;</li>\n<li>打错命令又不想一个一个字符删除</li>\n</ul>\n<h2 id=\"4-5-命令本质\"><a href=\"#4-5-命令本质\" class=\"headerlink\" title=\"4.5.命令本质\"></a>4.5.命令本质</h2><h3 id=\"4-5-1-命令路径\"><a href=\"#4-5-1-命令路径\" class=\"headerlink\" title=\"4.5.1.命令路径\"></a>4.5.1.命令路径</h3><p>在<a href=\"https://www.notion.so/bin-7d196610d54b4c55ad0f0b186b6e68d3\">之前笔记</a>中介绍了，/bin 目录下包含了很多命令。</p>\n<ul>\n<li>使用<code>which</code>命令可以查看命令路径：<br>  <img src=\"/post/Linux/%E5%91%BD%E4%BB%A4%E8%A1%8C/%E8%AE%A4%E8%AF%86Linux%E5%91%BD%E4%BB%A4%E8%A1%8C/Untitled%204.png\" alt=\"Untitled\"><br>&nbsp;</li>\n<li><code>ls</code>，<code>pwd</code>等命令都在 bin 里<br>&nbsp;</li>\n<li><code>cd</code> 是 Shell 内部的程序</li>\n</ul>\n<h3 id=\"4-5-2-环境变量\"><a href=\"#4-5-2-环境变量\" class=\"headerlink\" title=\"4.5.2.环境变量\"></a>4.5.2.环境变量</h3><p>我们在Shell中输入ls命令与输入/bin/ls的作用是一样的，当我们输入Shell时，它会到预定的目录下查找有没有该程序， 如果有就使用命令选项及参数调用该程序执行，并把程序的输出再呈现出来。而这个预定的目录我们可以通过如下命令来查看：</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">echo $PATH     # echo是输出命令，而&quot;$PATH&quot;是一个变量，表示输出变量内容</code></pre>\n\n<p><img src=\"/post/Linux/%E5%91%BD%E4%BB%A4%E8%A1%8C/%E8%AE%A4%E8%AF%86Linux%E5%91%BD%E4%BB%A4%E8%A1%8C/Untitled%205.png\" alt=\"Untitled\"></p>\n<ul>\n<li>“$PATH”是终端使用的路径环境变量，它使用“: ”进行分隔<br>&nbsp;</li>\n<li>表示Shell将会在这些路径下寻找命令程序， 在其中我们可以看到/bin路径</li>\n</ul>\n<p>也就是说，“$PATH” 路径环境变量让我们输入命令时省去了输入完整路径的麻烦， 而<strong>命令的本质</strong>大都是在<strong>文件系统中的一些应用程序</strong>。</p>\n","text":"1.命令行在早期的Unix系统与用户就是通过 Shell 进行交互的，如下图所示，Shell 对外接受用户输入的命令， 对内通过“系统调用”传递给内核，内核执行操作后把输出通过 Shell 呈现给用户，也就是说，Shell 就是一个中间人。而 Shell 的英文原意“壳”，也是为...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"嵌入式Linux","slug":"嵌入式Linux","count":9,"path":"api/tags/嵌入式Linux.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%91%BD%E4%BB%A4%E8%A1%8C\"><span class=\"toc-text\">1.命令行</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E6%89%93%E5%BC%80%E7%BB%88%E7%AB%AF\"><span class=\"toc-text\">2.打开终端</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E5%91%BD%E4%BB%A4%E6%8F%90%E7%A4%BA%E7%AC%A6\"><span class=\"toc-text\">3.命令提示符</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E5%91%BD%E4%BB%A4%E8%A7%A3%E9%87%8A\"><span class=\"toc-text\">3.1.命令解释</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2-%E5%91%BD%E4%BB%A4%E5%B0%9D%E8%AF%95\"><span class=\"toc-text\">3.2.命令尝试</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E5%91%BD%E4%BB%A4%E6%A0%BC%E5%BC%8F%E4%B8%8E%E5%B8%AE%E5%8A%A9\"><span class=\"toc-text\">4.命令格式与帮助</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-1-%E5%91%BD%E4%BB%A4%E7%9A%84%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">4.1.命令的格式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-2-%E5%91%BD%E4%BB%A4%E7%9A%84%E5%B8%AE%E5%8A%A9\"><span class=\"toc-text\">4.2.命令的帮助</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-3-%E8%87%AA%E5%8A%A8%E8%A1%A5%E5%85%A8\"><span class=\"toc-text\">4.3.自动补全</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-4-%E5%91%BD%E4%BB%A4%E7%9A%84%E9%80%80%E5%87%BA%E4%B8%8E%E5%8F%96%E6%B6%88\"><span class=\"toc-text\">4.4.命令的退出与取消</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-5-%E5%91%BD%E4%BB%A4%E6%9C%AC%E8%B4%A8\"><span class=\"toc-text\">4.5.命令本质</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-1-%E5%91%BD%E4%BB%A4%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">4.5.1.命令路径</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#4-5-2-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">4.5.2.环境变量</span></a></li></ol></li></ol></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Shell 脚本编程","uid":"ec8795976dd54e672a91a9531ed19b16","slug":"Linux/Shell/Shell 脚本编程","date":"2022-02-04T12:49:36.000Z","updated":"2022-02-20T12:58:30.002Z","comments":true,"path":"api/articles/Linux/Shell/Shell 脚本编程.json","keywords":null,"cover":"https://s2.loli.net/2022/02/16/qbhtZiKgwlmypDF.jpg","text":"1.C 语言脚本1.1.编写运行脚本 用 vim 编写一个 .c 文件 sudo vim hello.c #include &lt;stdio.h&gt; int main() &#123; printf(&quot;hello_world_212&quot;); return ...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"嵌入式Linux","slug":"嵌入式Linux","count":9,"path":"api/tags/嵌入式Linux.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"apt及yum包管理工具","uid":"18670d59e81dfa5084e52b3c391d63e1","slug":"Linux/apt/apt及yum包管理工具","date":"2022-02-04T12:49:36.000Z","updated":"2022-02-20T12:58:30.051Z","comments":true,"path":"api/articles/Linux/apt/apt及yum包管理工具.json","keywords":null,"cover":"https://s2.loli.net/2022/02/15/vshdHWopSF1y2Xj.jpg","text":"1.软件包和工具 Debian派系发行版 Redhat派系发行版 软件包 deb rpm 基础包管理工具 dpkg rpm 上层包管理工具 apt yum 在Debian、Ubuntu等Linux发行版中，通常使用deb（debian）形式的软件包 在RedHat，Fedora，...","link":"","photos":[],"count_time":{"symbolsCount":512,"symbolsTime":"1 mins."},"categories":[{"name":"Linux","slug":"Linux","count":16,"path":"api/categories/Linux.json"}],"tags":[{"name":"嵌入式Linux","slug":"嵌入式Linux","count":9,"path":"api/tags/嵌入式Linux.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}