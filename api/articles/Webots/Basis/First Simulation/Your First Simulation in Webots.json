{"title":"第一个仿真模型","uid":"7ac2b54ca1440cb7fe4eb2d0091dbb9b","slug":"Webots/Basis/First Simulation/Your First Simulation in Webots","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T15:35:49.865Z","comments":true,"path":"api/articles/Webots/Basis/First Simulation/Your First Simulation in Webots.json","keywords":null,"cover":"https://s2.loli.net/2022/02/07/HXSPf57RBEitghG.jpg","content":"<h1 id=\"1-Create-a-new-world\"><a href=\"#1-Create-a-new-world\" class=\"headerlink\" title=\"1.Create a new world\"></a><strong>1.Create a new world</strong></h1><p>与之前创建新世界方法一致：</p>\n<p><a href=\"https://lapzjfit.site/post/Webots%2FBasis%2FSimple%20model%2F%E7%AE%80%E5%8D%95%E6%A8%A1%E5%9E%8B%E4%BB%BF%E7%9C%9F\">简单模型仿真</a> </p>\n<h1 id=\"2-Add-an-e-puck-Robot\"><a href=\"#2-Add-an-e-puck-Robot\" class=\"headerlink\" title=\"2.Add an e-puck Robot\"></a><strong>2.Add an e-puck Robot</strong></h1><p>在此基础上，加入一个官方的机器人：</p>\n<ul>\n<li>右键→新增→PROTO nodes (webots projects)→robots→Gctronic→Epuck</li>\n</ul>\n<p><img src=\"/post/Webots/Basis/First%20Simulation/Your%20First%20Simulation%20in%20Webots/Untitled.png\" alt=\"Untitled.png\"></p>\n<p>因为该机器人自带一个 Control，它遇到障碍物可以自动避障，而我们要新增一个并改掉它。</p>\n<h1 id=\"3-Create-a-New-Controller\"><a href=\"#3-Create-a-New-Controller\" class=\"headerlink\" title=\"3.Create a New Controller\"></a><strong>3.Create a New Controller</strong></h1><p>向导（Wizards）→新机器人控制器（new controller）</p>\n<p><img src=\"/post/Webots/Basis/First%20Simulation/Your%20First%20Simulation%20in%20Webots/Untitled%201.png\" alt=\"Untitled%201.png\"></p>\n<p>这里我们选择 C 语言</p>\n<p><img src=\"/post/Webots/Basis/First%20Simulation/Your%20First%20Simulation%20in%20Webots/Untitled%202.png\" alt=\"Untitled%202.png\"></p>\n<p>这里我们先选择 webots 自带的编译器</p>\n<p><img src=\"/post/Webots/Basis/First%20Simulation/Your%20First%20Simulation%20in%20Webots/Untitled%203.png\" alt=\"Untitled%203.png\"></p>\n<p>更改控制器的名称</p>\n<p><img src=\"/post/Webots/Basis/First%20Simulation/Your%20First%20Simulation%20in%20Webots/Untitled%204.png\" alt=\"Untitled%204.png\"></p>\n<p>点击 E-puck→controller，选择刚刚我们新建的 controller</p>\n<p><img src=\"/post/Webots/Basis/First%20Simulation/Your%20First%20Simulation%20in%20Webots/Untitled%205.png\" alt=\"Untitled%205.png\"></p>\n<h1 id=\"4-Extend-the-Controller-to-Speed-Control\"><a href=\"#4-Extend-the-Controller-to-Speed-Control\" class=\"headerlink\" title=\"4.Extend the Controller to Speed Control\"></a><strong>4.Extend the Controller to Speed Control</strong></h1><p>下一步我们来修改自己新建控制代码，并拓展到速度控制。</p>\n<p>在官方的教程中可以找到速度控制源码</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;webots&#x2F;robot.h&gt;\n\n&#x2F;&#x2F; Added a new include file\n#include &lt;webots&#x2F;motor.h&gt;\n\n#define TIME_STEP 64\n\n#define MAX_SPEED 6.28\n\nint main(int argc, char **argv) &#123;\n  wb_robot_init();\n\n  &#x2F;&#x2F; get a handler to the motors and set target position to infinity (speed control)\n  WbDeviceTag left_motor &#x3D; wb_robot_get_device(&quot;left wheel motor&quot;);\n  WbDeviceTag right_motor &#x3D; wb_robot_get_device(&quot;right wheel motor&quot;);\n  wb_motor_set_position(left_motor, INFINITY);\n  wb_motor_set_position(right_motor, INFINITY);\n\n  &#x2F;&#x2F; set up the motor speeds at 10% of the MAX_SPEED.\n  wb_motor_set_velocity(left_motor, 0.1 * MAX_SPEED);\n  wb_motor_set_velocity(right_motor, 0.1 * MAX_SPEED);\n\n  while (wb_robot_step(TIME_STEP) !&#x3D; -1) &#123;\n  &#125;\n\n  wb_robot_cleanup();\n\n  return 0;\n&#125;</code></pre>\n\n<p>将其替换掉自己新建的模板（epuck_go_forward.c）</p>\n<p>ctrl+s 保存，之后点击编译</p>\n<p><img src=\"/post/Webots/Basis/First%20Simulation/Your%20First%20Simulation%20in%20Webots/Untitled%206.png\" alt=\"Untitled%206.png\"></p>\n<p>可以看到机器人沿着一个方向一直走。</p>\n<h1 id=\"参考与致谢\"><a href=\"#参考与致谢\" class=\"headerlink\" title=\"参考与致谢\"></a><strong>参考与致谢</strong></h1><ul>\n<li><a href=\"https://www.cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots\">Webots: tutorial-1-your-first-simulatio</a></li>\n</ul>\n","text":"1.Create a new world与之前创建新世界方法一致： 简单模型仿真 2.Add an e-puck Robot在此基础上，加入一个官方的机器人： 右键→新增→PROTO nodes (webots projects)→robots→Gctronic→Epuck 因为...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":16,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":16,"path":"api/tags/Webots.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-Create-a-new-world\"><span class=\"toc-text\">1.Create a new world</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-Add-an-e-puck-Robot\"><span class=\"toc-text\">2.Add an e-puck Robot</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-Create-a-New-Controller\"><span class=\"toc-text\">3.Create a New Controller</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-Extend-the-Controller-to-Speed-Control\"><span class=\"toc-text\">4.Extend the Controller to Speed Control</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E4%B8%8E%E8%87%B4%E8%B0%A2\"><span class=\"toc-text\">参考与致谢</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Webots 节点问题","uid":"4dd2c32722399921db71fc37e2defc0b","slug":"Webots/Basis/Node/Webots节点问题","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T15:35:49.874Z","comments":true,"path":"api/articles/Webots/Basis/Node/Webots节点问题.json","keywords":null,"cover":"https://s2.loli.net/2022/02/07/4fqnPhBXkJ6S2TF.jpg","text":"每个运行实例被称为节点，换句话说，每个运行的进程就是一个节点，每个机器人程序，可以有非常多个节点。 我们也可以运行同一个程序的多个副本（确保每个副本使用不同节点名），则每个副本都被当作一个独立节点，节点（Node）可以用来提供某种数据或能力，比如读取某传感器（Sensor）数据，...","link":"","photos":[],"count_time":{"symbolsCount":561,"symbolsTime":"1 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":16,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":16,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"简单模型仿真","uid":"509c30d25ef695d68dc7f877cde8022c","slug":"Webots/Basis/Simple model/简单模型仿真","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T15:35:49.881Z","comments":true,"path":"api/articles/Webots/Basis/Simple model/简单模型仿真.json","keywords":null,"cover":"https://s2.loli.net/2022/02/07/KWjFM8RTYvoiks6.jpg","text":"1. 创建新世界那么最上面的两个节点是 Wordlnfo(世界信息）、Viewpoint(视角)。这两项是无法删除的Wordlnfo 里面有仿真物理学的一些参数，我们一般不修改这些参数 1.1. Wordlnfo Wordlnfo→basicTimeStep ：这个参数。它代表仿...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":16,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":16,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}