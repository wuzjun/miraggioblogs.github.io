{"title":"初识控制器","uid":"b0789e481403d86aa2884de6d2dd0538","slug":"Webots/Basis/Controllers/More about Controllers","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T16:30:33.735Z","comments":true,"path":"api/articles/Webots/Basis/Controllers/More about Controllers.json","keywords":null,"cover":"https://s2.loli.net/2022/02/08/OhKxm4G9YelEwc1.jpg","content":"<h1 id=\"1-E-PUCK机器人模型\"><a href=\"#1-E-PUCK机器人模型\" class=\"headerlink\" title=\"1. E-PUCK机器人模型\"></a><strong>1. E-PUCK机器人模型</strong></h1><p>e-puck 机器人周围有 8 个红外距离传感器，我们可以通过判断传感器值来避障。</p>\n<p>控制机器人控制图如下：</p>\n<p><img src=\"/post/Webots/Basis/Controllers/More%20about%20Controllers/Controllers.png\" alt=\"Controllers.png\"></p>\n<p>下面开始介绍代码使用</p>\n<h1 id=\"2-自行编写控制器\"><a href=\"#2-自行编写控制器\" class=\"headerlink\" title=\"2.自行编写控制器\"></a><strong>2.自行编写控制器</strong></h1><p>按照之前的步骤创建控制器模板。</p>\n<h2 id=\"2-1-编写代码\"><a href=\"#2-1-编写代码\" class=\"headerlink\" title=\"2.1.编写代码\"></a>2.1.编写代码</h2><p>首先添加与Robot，DistanceSensor和Motor节点相对应的头文件</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;webots&#x2F;robot.h&gt;\n#include &lt;webots&#x2F;distance_sensor.h&gt;\n#include &lt;webots&#x2F;motor.h&gt;</code></pre>\n\n<p>在include语句之后添加一个宏，该宏定义每个物理步骤的持续时间。该宏将用作该wb_robot_step函数的参数，还将用于启用设备。此持续时间以毫秒为单位指定，并且必须是WorldInfo节点basicTimeStep字段中值的倍数。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#define TIME_STEP 64</code></pre>\n\n<p>宏定义设定机器人速度最大值</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#define MAX_SPEED 7</code></pre>\n\n<h3 id=\"2-1-1-传感器\"><a href=\"#2-1-1-传感器\" class=\"headerlink\" title=\"2.1.1. 传感器\"></a>2.1.1. 传感器</h3><p>首先在main函数里添加传感器初始化</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;&#x2F; 初始化传感器\n\tint i;\n\tWbDeviceTag ps[8];\n&#x2F;&#x2F;传感器名字\n\tchar ps_names[8][4] &#x3D; &#123;\n\t\t&quot;ps0&quot;, &quot;ps1&quot;, &quot;ps2&quot;, &quot;ps3&quot;,\n\t\t&quot;ps4&quot;, &quot;ps5&quot;, &quot;ps6&quot;, &quot;ps7&quot;&#125;;\n\n\tfor (i &#x3D; 0; i &lt; 8; i++)\n\t&#123;\n    &#x2F;&#x2F;拿句柄\n\t\tps[i] &#x3D; wb_robot_get_device(ps_names[i]);\n    &#x2F;&#x2F;使能传感器\n\t\twb_distance_sensor_enable(ps[i], TIME_STEP);\n\t&#125;</code></pre>\n\n<h3 id=\"2-1-2-电机\"><a href=\"#2-1-2-电机\" class=\"headerlink\" title=\"2.1.2. 电机\"></a>2.1.2. 电机</h3><p>初始化电机</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;&#x2F;初始化电机\n\tWbDeviceTag left_motor &#x3D; wb_robot_get_device(&quot;left wheel motor&quot;);\n\tWbDeviceTag right_motor &#x3D; wb_robot_get_device(&quot;right wheel motor&quot;);</code></pre>\n\n<p>配置电机走的路程</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;&#x2F;电机走的位置给无限大\n\twb_motor_set_position(left_motor, INFINITY);\n\twb_motor_set_position(right_motor, INFINITY);</code></pre>\n\n<p>初始化电机速度</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;&#x2F;电机的速度初始化\n\twb_motor_set_velocity(left_motor, 0.0);\n\twb_motor_set_velocity(right_motor, 0.0);</code></pre>\n\n<h3 id=\"2-1-3-总控制\"><a href=\"#2-1-3-总控制\" class=\"headerlink\" title=\"2.1.3. 总控制\"></a>2.1.3. 总控制</h3><p>进入while函数里，进行电机控制</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">&#x2F;&#x2F;读取传感器数值\n\t\tdouble ps_values[8];\n\t\tfor (i &#x3D; 0; i &lt; 8; i++)\n\t\t&#123;\n\t\t\tps_values[i] &#x3D; wb_distance_sensor_get_value(ps[i]);\n\t\t&#125;\n\n\t\t&#x2F;&#x2F;判断传感器是否触发\n\t\tbool right_obstacle &#x3D;\n\t\t\tps_values[0] &gt; 80.0 ||\n\t\t\tps_values[1] &gt; 80.0 ||\n\t\t\tps_values[2] &gt; 80.0;\n\t\tbool left_obstacle &#x3D;\n\t\t\tps_values[5] &gt; 80.0 ||\n\t\t\tps_values[6] &gt; 80.0 ||\n\t\t\tps_values[7] &gt; 80.0;\n\n\t\t&#x2F;&#x2F; initialize motor speeds at 50% of MAX_SPEED.\n\t\tdouble left_speed &#x3D; 0.5 * MAX_SPEED;\n\t\tdouble right_speed &#x3D; 0.5 * MAX_SPEED;\n\n\t\t&#x2F;&#x2F; modify speeds according to obstacles\n\t\tif (left_obstacle)\n\t\t&#123;\n\t\t\t&#x2F;&#x2F; turn right\n\t\t\tleft_speed &#x3D; 0.5 * MAX_SPEED;\n\t\t\tright_speed &#x3D; -0.5 * MAX_SPEED;\n\t\t&#125;\n\t\telse if (right_obstacle)\n\t\t&#123;\n\t\t\t&#x2F;&#x2F; turn left\n\t\t\tleft_speed &#x3D; -0.5 * MAX_SPEED;\n\t\t\tright_speed &#x3D; 0.5 * MAX_SPEED;\n\t\t&#125;\n\n\t\t&#x2F;&#x2F; write actuators inputs\n\t\twb_motor_set_velocity(left_motor, left_speed);\n\t\twb_motor_set_velocity(right_motor, right_speed);</code></pre>\n\n<h2 id=\"2-2-编译代码并仿真\"><a href=\"#2-2-编译代码并仿真\" class=\"headerlink\" title=\"2.2.编译代码并仿真\"></a>2.2.编译代码并仿真</h2><p>我们可以看到小车遇到障碍物时能转弯，但是过程非常僵硬，而且转弯幅度并不是线性</p>\n<h1 id=\"参考与致谢\"><a href=\"#参考与致谢\" class=\"headerlink\" title=\"参考与致谢\"></a><strong>参考与致谢</strong></h1><p><a href=\"https://www.cyberbotics.com/doc/guide/tutorial-4-more-about-controllers\">Webots: tutorial-4-more-about-</a></p>\n","text":"1. E-PUCK机器人模型e-puck 机器人周围有 8 个红外距离传感器，我们可以通过判断传感器值来避障。 控制机器人控制图如下： 下面开始介绍代码使用 2.自行编写控制器按照之前的步骤创建控制器模板。 2.1.编写代码首先添加与Robot，DistanceSensor和Mo...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":16,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":16,"path":"api/tags/Webots.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-E-PUCK%E6%9C%BA%E5%99%A8%E4%BA%BA%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">1. E-PUCK机器人模型</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E8%87%AA%E8%A1%8C%E7%BC%96%E5%86%99%E6%8E%A7%E5%88%B6%E5%99%A8\"><span class=\"toc-text\">2.自行编写控制器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E7%BC%96%E5%86%99%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">2.1.编写代码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-1-%E4%BC%A0%E6%84%9F%E5%99%A8\"><span class=\"toc-text\">2.1.1. 传感器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-2-%E7%94%B5%E6%9C%BA\"><span class=\"toc-text\">2.1.2. 电机</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-1-3-%E6%80%BB%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">2.1.3. 总控制</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E7%BC%96%E8%AF%91%E4%BB%A3%E7%A0%81%E5%B9%B6%E4%BB%BF%E7%9C%9F\"><span class=\"toc-text\">2.2.编译代码并仿真</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E4%B8%8E%E8%87%B4%E8%B0%A2\"><span class=\"toc-text\">参考与致谢</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"使用 URDF2WEBOTS 导入 SolidWorks 装配体","uid":"9f4d731f68633873b2e6fa4c0e1d7745","slug":"Webots/Application/导入模型/使用 URDF2WEBOTS 导入 SolidWorks 装配体","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T16:30:33.705Z","comments":true,"path":"api/articles/Webots/Application/导入模型/使用 URDF2WEBOTS 导入 SolidWorks 装配体.json","keywords":null,"cover":"https://s2.loli.net/2022/02/08/iUuwqCBzWEm87Dt.jpg","text":"1.安装pythonURDF2WEBOTS 要在 python下运行，可以去 python 官网找 python 包然后下载。我用的是 python-3.8.6-amd64 包。 Windows python3.8环境安装 2.使用官方包导入URDF2WEBOTS 可以把URDF...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":16,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":16,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"复合固体与物理属性","uid":"8ccb81c699797060f7237a0cd838fd05","slug":"Webots/Basis/Compound Solid/Compound Solid","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T16:30:33.720Z","comments":true,"path":"api/articles/Webots/Basis/Compound Solid/Compound Solid.json","keywords":null,"cover":"https://s2.loli.net/2022/02/08/NapMbPhukLZzOqe.jpg","text":"1. 复合固件官方给的关系图如下 1.1. 创建固体哑铃（复合固体）创建如下： 先在主界面创建一个solid，在children里创建一个Group Group→children里创建shape→Cylinder 继续在Group→children里创建Transform→chi...","link":"","photos":[],"count_time":{"symbolsCount":376,"symbolsTime":"1 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":16,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":16,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}