{"title":"坑","uid":"de031a663c08299ee4e9b142b4a79f7b","slug":"Webots/hole/坑","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-09T13:27:47.447Z","comments":true,"path":"api/articles/Webots/hole/坑.json","keywords":null,"cover":"https://s2.loli.net/2022/02/09/JnWNyL315OTx69f.jpg","content":"<h1 id=\"1-加重仿真计算复杂度的操作\"><a href=\"#1-加重仿真计算复杂度的操作\" class=\"headerlink\" title=\"1.加重仿真计算复杂度的操作\"></a><strong>1.加重仿真计算复杂度的操作</strong></h1><h2 id=\"1-1-定义两个地板\"><a href=\"#1-1-定义两个地板\" class=\"headerlink\" title=\"1.1.定义两个地板\"></a>1.1.定义两个地板</h2><p>在创建地图的时候，导入机械的图纸。由于直接定义一个shape的碰撞节点作为地板，小车在路上走的时候会颠簸。最好的办法是碰撞边界定义为一个地板，走的时候会好很多。但是一开始由于觉得要分开红蓝两边地图，于是定义了两边地板。仿真的时候就报警告，说计算不过来。于是把地面的Solid全部放在一个Transform里，之后只定义一个地板节点（不能添加physic节点），仿真时就不会报警告了。</p>\n<h2 id=\"1-2-没有碰撞边界Solid接触\"><a href=\"#1-2-没有碰撞边界Solid接触\" class=\"headerlink\" title=\"1.2.没有碰撞边界Solid接触\"></a>1.2.没有碰撞边界Solid接触</h2><p>任何Solid节点接触位置一定要有碰撞边界，要是没有设置碰撞边界，也会导致仿真变卡，报警告。</p>\n<p>例如：Solidworks的传过来的地板是有厚度的，但是当我们定义一个地板节点的时候，要是地板平面移动得不够高，地板上的物体就会发生穿模，仿真会报警告和变卡。</p>\n<h1 id=\"2-小车速度快了爆裂\"><a href=\"#2-小车速度快了爆裂\" class=\"headerlink\" title=\"2.小车速度快了爆裂\"></a><strong>2.小车速度快了爆裂</strong></h1><p>原因：这是因为仿真步长太长，计算不够多，导致仿真出错，整个东西直接爆点。</p>\n<p>解决方法：更改 WorldInfo 節點的欄位值。</p>\n<p>BasicTimeStep：將預設值降低到 16 (甚至 8 )（代码也要改）</p>\n<h1 id=\"3-添加了碰撞边界也会往下掉\"><a href=\"#3-添加了碰撞边界也会往下掉\" class=\"headerlink\" title=\"3.添加了碰撞边界也会往下掉\"></a><strong>3.添加了碰撞边界也会往下掉</strong></h1><p>機器人可能太重了物理結構。</p>\n<p>您可以透過更改 WorldInfo 節點的欄位值( <a href=\"https://www.cyberbotics.com/doc/reference/worldinfo\">https://www.cyberbotics.com/doc/reference/worldinfo</a> )來解決這個問題。 以下是重要領域:</p>\n<ul>\n<li>ERP:您可能想增加適用於小型和輕型物件的預設值(嘗試將其設定為~0.6)</li>\n<li>BasicTimeStep:這裡您可能將預設值降低到16(甚至8),這將使模擬執行稍慢,因為它計算更多步驟,但更穩定.</li>\n<li>contactProperties:您可能需要新增一個接觸屬性,定義地板和機器人輪子之間接觸的性質(增加摩擦,減少接觸的海綿性)。</li>\n</ul>\n<h1 id=\"4-电机角度值问题\"><a href=\"#4-电机角度值问题\" class=\"headerlink\" title=\"4.电机角度值问题\"></a><strong>4.电机角度值问题</strong></h1><p>在我得到一台完整步兵时，想按照RM的跟随代码仿真底盘跟随云台，但是后面发现，事情并没有这么简单。</p>\n<p>我刚开始的设想是用 wb_motor_get_target_position  函数获取 YAW 轴电机的角度值，底盘跟随 PID 闭环，然后使用陀螺仪读取角度值，作为 YAW 轴电机的角度值，从而实现底盘跟随。但是后来发现，YAW 轴电机PID算出来后通过 wb_motor_set_velocity 函数给电机速度，这样就会导致一个问题，wb_motor_get_target_position 函数只能返回 0 值，除非使用 wb_motor_set_position 直接给目标角度给电机才能读到值，也就是 YAW 轴只能使用电机环，那就无法跟随。除非底盘也使用一个陀螺仪，与云台的陀螺仪作差值，但是这样与实际不符合，所以不可行。也就是说并没有什么意义。淦！！！！！</p>\n<h1 id=\"5-工程无法提交到-github-上\"><a href=\"#5-工程无法提交到-github-上\" class=\"headerlink\" title=\"5.工程无法提交到 github 上\"></a><strong>5.工程无法提交到 github 上</strong></h1><p>普通的工程是完全可以提交的，直到我创建了一个用VS Studio编译的控制器，发现工程在暂存文件的时候会弹出</p>\n<p><img src=\"/post/Webots/hole/%E5%9D%91/Untitled.png\" alt=\"Untitled.png\"></p>\n<p>我到 Git Bash 验证后，发现我的 SSH 是正常的，也就是说文件里有内鬼，妨碍我暂存。于是一个一个的暂存，终于发现 .opendb 后缀的文件是内鬼，把它忽略了就可以了</p>\n<p><img src=\"/post/Webots/hole/%E5%9D%91/Untitled%201.png\" alt=\"Untitled%201.png\"></p>\n<h1 id=\"6-数据出现-nan-的情况\"><a href=\"#6-数据出现-nan-的情况\" class=\"headerlink\" title=\"6.数据出现 nan 的情况\"></a><strong>6.数据出现 nan 的情况</strong></h1><p>由于设备的使能后，需要经过第一个周期才能得到设备上反馈回来的值，这个值才是有效了。若你在第一个周期之前去读取此数据的话，得到的是nan(非数)。所以就直接导致了，有些设备数据的初始化，不可以写在while (wb_robot_step(TIME_STEP) != -1)外。得将初始化这些设备数据的函数写在while中。例如：编码器，在编码器使能函数的描述中有提及</p>\n<p><img src=\"/post/Webots/hole/%E5%9D%91/Untitled%202.png\" alt=\"Untitled%202.png\"></p>\n<p>而设备数据的初始化又是只需要一次，且应该在设备控制函数之前。我用的是去声明个控制变量，让这些设备数据初始化函数在机器人第一次执行程序时(上电)时，就在设备控制函数之前初始化一次，之后就受控制变量的影响，不会再执行设备数据初始化函数。(虽然此办法有点无脑,但可以先将就将就……)</p>\n","text":"1.加重仿真计算复杂度的操作1.1.定义两个地板在创建地图的时候，导入机械的图纸。由于直接定义一个shape的碰撞节点作为地板，小车在路上走的时候会颠簸。最好的办法是碰撞边界定义为一个地板，走的时候会好很多。但是一开始由于觉得要分开红蓝两边地图，于是定义了两边地板。仿真的时候就报...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":19,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":19,"path":"api/tags/Webots.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%8A%A0%E9%87%8D%E4%BB%BF%E7%9C%9F%E8%AE%A1%E7%AE%97%E5%A4%8D%E6%9D%82%E5%BA%A6%E7%9A%84%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">1.加重仿真计算复杂度的操作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-%E5%AE%9A%E4%B9%89%E4%B8%A4%E4%B8%AA%E5%9C%B0%E6%9D%BF\"><span class=\"toc-text\">1.1.定义两个地板</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-%E6%B2%A1%E6%9C%89%E7%A2%B0%E6%92%9E%E8%BE%B9%E7%95%8CSolid%E6%8E%A5%E8%A7%A6\"><span class=\"toc-text\">1.2.没有碰撞边界Solid接触</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E5%B0%8F%E8%BD%A6%E9%80%9F%E5%BA%A6%E5%BF%AB%E4%BA%86%E7%88%86%E8%A3%82\"><span class=\"toc-text\">2.小车速度快了爆裂</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E6%B7%BB%E5%8A%A0%E4%BA%86%E7%A2%B0%E6%92%9E%E8%BE%B9%E7%95%8C%E4%B9%9F%E4%BC%9A%E5%BE%80%E4%B8%8B%E6%8E%89\"><span class=\"toc-text\">3.添加了碰撞边界也会往下掉</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E7%94%B5%E6%9C%BA%E8%A7%92%E5%BA%A6%E5%80%BC%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">4.电机角度值问题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E5%B7%A5%E7%A8%8B%E6%97%A0%E6%B3%95%E6%8F%90%E4%BA%A4%E5%88%B0-github-%E4%B8%8A\"><span class=\"toc-text\">5.工程无法提交到 github 上</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#6-%E6%95%B0%E6%8D%AE%E5%87%BA%E7%8E%B0-nan-%E7%9A%84%E6%83%85%E5%86%B5\"><span class=\"toc-text\">6.数据出现 nan 的情况</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"补充篇","uid":"fb0e63c8a2cfbc52de8bd40f5b32b170","slug":"Webots/Basis/补充篇","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T16:30:33.750Z","comments":true,"path":"api/articles/Webots/Basis/补充篇.json","keywords":null,"cover":"https://s2.loli.net/2022/02/08/hSPRD5aL8OeAZi1.jpg","text":"1.延时有时候做完一件事需要延时几毫秒，有些单片机里是用 Delay() 来表示，有些地方是用 Thread.Sleep() 表示，不管哪个函数，webots 里用哪个呢。 **wb_robot_step();** 在 webots 用这个函数，可以模拟控制器进行延时，而仿真的世...","link":"","photos":[],"count_time":{"symbolsCount":362,"symbolsTime":"1 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":19,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":19,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"添加IMU传感器","uid":"1db430f3082768ced870d0c537dad34d","slug":"Webots/Application/IMU/添加IMU传感器","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T17:03:35.875Z","comments":true,"path":"api/articles/Webots/Application/IMU/添加IMU传感器.json","keywords":null,"cover":"https://s2.loli.net/2022/02/09/NeDbjfVzIputR4G.jpg","text":"1.添加姿态测量传感器 InertialUnit1.1.创建一个姿态测量传感器在现有的 Robot 上才能创建。 children→InertialUnit 可创建姿态传感器。在 InertialUnit 下创建一个形状，随便一个圆柱也行，放在小车的中心或者想放的任何位置。（跟上...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":19,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":19,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}