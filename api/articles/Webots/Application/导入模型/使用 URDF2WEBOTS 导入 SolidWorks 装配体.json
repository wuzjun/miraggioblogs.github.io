{"title":"使用 URDF2WEBOTS 导入 SolidWorks 装配体","uid":"9f4d731f68633873b2e6fa4c0e1d7745","slug":"Webots/Application/导入模型/使用 URDF2WEBOTS 导入 SolidWorks 装配体","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T16:30:33.705Z","comments":true,"path":"api/articles/Webots/Application/导入模型/使用 URDF2WEBOTS 导入 SolidWorks 装配体.json","keywords":null,"cover":"https://s2.loli.net/2022/02/08/iUuwqCBzWEm87Dt.jpg","content":"<h1 id=\"1-安装python\"><a href=\"#1-安装python\" class=\"headerlink\" title=\"1.安装python\"></a><strong>1.安装python</strong></h1><p>URDF2WEBOTS 要在 python下运行，可以去 python 官网找 python 包然后下载。我用的是 python-3.8.6-amd64 包。</p>\n<p><a href=\"https://lapzjfit.site/post/Python%2F%E5%AE%89%E8%A3%85%2FWindows%20python3%208%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85\">Windows python3.8环境安装</a></p>\n<h1 id=\"2-使用官方包导入\"><a href=\"#2-使用官方包导入\" class=\"headerlink\" title=\"2.使用官方包导入\"></a><strong>2.使用官方包导入</strong></h1><p>URDF2WEBOTS 可以把URDF文件转换成 .proto 文件，Webots 会自动检测为一个 Robot 节点并使用。但是前提是 SolidWorks 导出 URDF 文件时尽可能把坐标点，基准面等配合关系都处理好，不然导入 Webots 里会非常难调整。</p>\n<h2 id=\"2-1-配置环境\"><a href=\"#2-1-配置环境\" class=\"headerlink\" title=\"2.1.配置环境\"></a>2.1.配置环境</h2><p>安装好之后可以运行 cmd，输入 python</p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/Untitled.png\" alt=\"Untitled.png\"></p>\n<p>出现下列语句证明已经装成功了 ，可以开始安装 URDF2WEBOTS </p>\n<p>在 cmd 里输入</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">pip install urdf2webots</code></pre>\n\n<p>就会自动安装，安装完成后就正式可以使用 urdf2webots</p>\n<h2 id=\"2-2-使用-urdf2webots\"><a href=\"#2-2-使用-urdf2webots\" class=\"headerlink\" title=\"2.2.使用 urdf2webots\"></a>2.2.使用 urdf2webots</h2><p>运行 cmd，输入 python</p>\n<p>接着输入</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">from urdf2webots.importer import convert2urdf</code></pre>\n\n<p>再输入</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">convert2urdf(&#39;G:\\\\URDF\\\\Lathe8\\\\urdf\\\\Lathe8.urdf&#39;)</code></pre>\n\n<p>其中 G:\\URDF\\Lathe8\\urdf\\Lathe8.urdf 是 SolidWorks 生成 urdf 文件的那个包的路径，之后会生成同文件名 .proto 。如果安装 urdf2webots 是没更改路径，他会自动放在 C:\\用户\\xxx 里（找不到就搜索 .proto 吧）</p>\n<p>找到 xxx.proto 后剪切到工程的 protos 文件夹里，打开工程，点击新建</p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/Untitled%201.png\" alt=\"Untitled%201.png\"></p>\n<p>可以看见 PROTO nodes 里有 Robot 节点可以选</p>\n<p>之后把该节点转换为一个 Robot 节点，在 SolidWorks 导出是定义的所有关节关系就会显示出来。而且会自动设定好了碰撞边界还有物理系数，有需要可以自行修改。</p>\n<p>再给这些关节电机修改名字，加上编写控制器，就可以直接使用模型了。</p>\n<p>但是据某些博客说用官方包会有 BUG（但是我暂时没发现）</p>\n<h1 id=\"3-使用第三方-urdf2webots-包导入\"><a href=\"#3-使用第三方-urdf2webots-包导入\" class=\"headerlink\" title=\"3.使用第三方 urdf2webots 包导入\"></a><strong>3.使用第三方 urdf2webots 包导入</strong></h1><h2 id=\"3-1-了解第三方-urdf2webots-包\"><a href=\"#3-1-了解第三方-urdf2webots-包\" class=\"headerlink\" title=\"3.1.了解第三方 urdf2webots 包\"></a>3.1.了解第三方 urdf2webots 包</h2><p>首先还是要 python 环境</p>\n<p>当你安装官方包失败时，或者遇到 BUG，可以使用这个第三方的 urdf2webots 包，是拿比较旧的官方包经过民间修改，所以它不能自动设置碰撞边界，但是比较稳定。</p>\n<p><a href=\"https://wwb.lanzouw.com/iTtXXzrih4b\">urdf2webots 压缩包</a></p>\n<p>解压缩后会出现下面的东西</p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/Untitled%202.png\" alt=\"Untitled%202.png\"></p>\n<h2 id=\"3-2配置环境\"><a href=\"#3-2配置环境\" class=\"headerlink\" title=\"3.2配置环境\"></a>3.2配置环境</h2><p>如果使用 cmd 能运行，则跳过此步骤。</p>\n<p>在微软商店里安装 PowerShell。</p>\n<h2 id=\"3-3使用方法\"><a href=\"#3-3使用方法\" class=\"headerlink\" title=\"3.3使用方法\"></a>3.3使用方法</h2><p>在命令行里更改路径：cd 路径（路径为该第三方包的解压路径）</p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/Untitled%203.png\" alt=\"Untitled%203.png\"></p>\n<p>之后输入</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">python urdf2webots.py --input&#x3D;yourSelfRobotModel.urdf  &#x2F;&#x2F;URDF文件的路径</code></pre>\n\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/Untitled%204.png\" alt=\"Untitled%204.png\"></p>\n<p>生成的 xxx.proto 文件位于 urdf2webots 功能包目录下</p>\n<p>找到 xxx.proto 后剪切到工程的 protos 文件夹里，打开工程，点击新建</p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/Untitled%201.png\" alt=\"Untitled%201.png\"></p>\n<p>可以看见 PROTO nodes 里有 Robot 节点可以选</p>\n<p>之后把该节点转换为一个 Robot 节点，在 SolidWorks 导出是定义的所有关节关系就会显示出来。但是碰撞属性要自己设立，一般只需要把 shape 重定义，直接在碰撞属性里找到该宏，直接用就可以了。</p>\n<p>再给这些关节电机修改名字，加上编写控制器，就可以直接使用模型了。</p>\n<h1 id=\"4-模型显示结构问题\"><a href=\"#4-模型显示结构问题\" class=\"headerlink\" title=\"4.模型显示结构问题\"></a><strong>4.模型显示结构问题</strong></h1><p>urdf2webots 自动生成显示结构是无法修改的。</p>\n<p>某些非必要的结构，例如四轮小车的底板，对仿真没有严格的要求，只需要能检测碰撞边界即可，那么我们可以直接用其生成的显示结构直接作为碰撞边界使用。</p>\n<p>但是必要结构，例如四轮小车的轮子，按照其自动生成的结构，仿真起来会在平地上一跳一跳，这是由于直接使用自动生成结构作为碰撞边界导致的。</p>\n<p>解决这个问题的办法是：自行在该节点下创建一个碰撞属性，用一个接近于物体形状的图形，来代替其原来的碰撞属性，从而使仿真时更加真实。</p>\n<p>官方四足：</p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/62bd66898c38dadc5ba9c557c2961bd.png\" alt=\"62bd66898c38dadc5ba9c557c2961bd.png\"></p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/aeb0965f83ae7bb737abdf9fae767e4.png\" alt=\"aeb0965f83ae7bb737abdf9fae767e4.png\"></p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/042fbd31e768b7937f351047e0b1fc9.png\" alt=\"042fbd31e768b7937f351047e0b1fc9.png\"></p>\n<p><img src=\"/post/Webots/Application/%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9E%8B/%E4%BD%BF%E7%94%A8%20URDF2WEBOTS%20%E5%AF%BC%E5%85%A5%20SolidWorks%20%E8%A3%85%E9%85%8D%E4%BD%93/365f6b2da926b907e3ee4df46bb25f7.png\" alt=\"365f6b2da926b907e3ee4df46bb25f7.png\"></p>\n<h1 id=\"5-自身穿模问题\"><a href=\"#5-自身穿模问题\" class=\"headerlink\" title=\"5.自身穿模问题\"></a><strong>5.自身穿模问题</strong></h1><p>如果将此字段设置为 True，则可能正在寻找机器人设备的 “selfCollision” 字段(默认情况下为 False )，机器人将能够自行碰撞。</p>\n<p>但是要小心，如文档中所述，这会影响仿真速度:</p>\n<p>但是，启用自碰撞可能会降低模拟速度，因为在模拟过程中会产生更多的碰撞</p>\n<p>并且不会处理直接连续的实体之间的碰撞:</p>\n<p>注意，仅将检测非连续实体之间的碰撞。对于连续的实体，例如两个通过关节彼此连接的实体，即使启用了自碰撞，也不会执行碰撞检测。原因是用户通常不需要这种类型的碰撞检测，因为将需要非常精确地设计实体的边界对象。为了防止两个连续的实体节点相互穿透，应相应地调整相应联合节点的 minStop 和 maxStop 字段</p>\n<h1 id=\"参考与致谢\"><a href=\"#参考与致谢\" class=\"headerlink\" title=\"参考与致谢\"></a><strong>参考与致谢</strong></h1><ul>\n<li><a href=\"https://www.guyuehome.com/5424\">听说你只会用Gazebo仿真？</a></li>\n</ul>\n<ul>\n<li><a href=\"https://blog.csdn.net/weixin_42454034/article/details/110170296?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control\">将solidworks装配体模型导入webots并进行控制_时光@印迹的博客-CSDN博客</a></li>\n</ul>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_33816775/article/details/106208612\">将SolidWorks机器人模型导入webots的快捷方法_Wildec-CSDN博客</a></li>\n</ul>\n<ul>\n<li><a href=\"https://www.jianshu.com/p/ddb34b542a19\">Webots</a></li>\n</ul>\n","text":"1.安装pythonURDF2WEBOTS 要在 python下运行，可以去 python 官网找 python 包然后下载。我用的是 python-3.8.6-amd64 包。 Windows python3.8环境安装 2.使用官方包导入URDF2WEBOTS 可以把URDF...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":19,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":19,"path":"api/tags/Webots.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%AE%89%E8%A3%85python\"><span class=\"toc-text\">1.安装python</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E4%BD%BF%E7%94%A8%E5%AE%98%E6%96%B9%E5%8C%85%E5%AF%BC%E5%85%A5\"><span class=\"toc-text\">2.使用官方包导入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">2.1.配置环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-%E4%BD%BF%E7%94%A8-urdf2webots\"><span class=\"toc-text\">2.2.使用 urdf2webots</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E4%BD%BF%E7%94%A8%E7%AC%AC%E4%B8%89%E6%96%B9-urdf2webots-%E5%8C%85%E5%AF%BC%E5%85%A5\"><span class=\"toc-text\">3.使用第三方 urdf2webots 包导入</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-1-%E4%BA%86%E8%A7%A3%E7%AC%AC%E4%B8%89%E6%96%B9-urdf2webots-%E5%8C%85\"><span class=\"toc-text\">3.1.了解第三方 urdf2webots 包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-2%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">3.2配置环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-3%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">3.3使用方法</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E6%A8%A1%E5%9E%8B%E6%98%BE%E7%A4%BA%E7%BB%93%E6%9E%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">4.模型显示结构问题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#5-%E8%87%AA%E8%BA%AB%E7%A9%BF%E6%A8%A1%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">5.自身穿模问题</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E4%B8%8E%E8%87%B4%E8%B0%A2\"><span class=\"toc-text\">参考与致谢</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"激光测距","uid":"80ea0cc761d83c0a2eee1d3642703324","slug":"Webots/Application/laser/激光测距","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-09T13:27:47.428Z","comments":true,"path":"api/articles/Webots/Application/laser/激光测距.json","keywords":null,"cover":"https://s2.loli.net/2022/02/09/RuOmPE9haZSG7Wy.jpg","text":"1.新建激光测距创建一个 DistanceSensor 节点，在 type 中修改为 lsaer，就是激光测距模式。 测距设置为一个高 0.004，半径 0.008 的圆柱，激光（测距）的方向是沿着 Z 轴（红色箭头）方向，于是我们要将传感器坐标旋转成这样 但是旋转成这样 chi...","link":"","photos":[],"count_time":{"symbolsCount":749,"symbolsTime":"1 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":19,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":19,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"创建三全向轮小车","uid":"86336032c6ac02563b9014b8bacea503","slug":"Webots/Application/omni wheel/创建三全向轮小车","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T16:30:33.688Z","comments":true,"path":"api/articles/Webots/Application/omni wheel/创建三全向轮小车.json","keywords":null,"cover":"https://s2.loli.net/2022/02/08/uk4st92T1lxBzEf.jpg","text":"官方有开源的全向轮模型，可以先尝试自己建立 下面我会讲我的思路，默认添加物理属性和碰撞属性。 1.搭建躯干我们先创建一个 Robot 节点，在 children 里面先建立一个 Transform 节点。这样可以使小车躯干在 Robot（父级）坐标下进行移动。 我在 Transf...","link":"","photos":[],"count_time":{"symbolsCount":"1.9k","symbolsTime":"2 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":19,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":19,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}