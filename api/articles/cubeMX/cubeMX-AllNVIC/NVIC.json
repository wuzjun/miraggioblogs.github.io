{"title":"CM中的模块启动函数，中断配置，配置技巧，方式格式","uid":"fdaeef215bccf348abd53466e04935a5","slug":"cubeMX/cubeMX-AllNVIC/NVIC","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.101Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllNVIC/NVIC.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/mYiOwM6ZS41GaC9.jpg","content":"<p>这张实际上为了补上前面没有说明的内容而写的，也是我写到上一章的时候突然发现没写的内容，这里进行补充。</p>\n<p>首先是一直以来提到却没有详细说的模块启动。</p>\n<h1 id=\"1-模块启动函数\"><a href=\"#1-模块启动函数\" class=\"headerlink\" title=\"1.模块启动函数\"></a><strong>1.模块启动函数</strong></h1><p>什么是模块启动函数呢？</p>\n<p>在我们生成代码的时候，HAL 只是会帮我们配置好对应的东西，而真正的是否使用这个模块是由我们自己决定的，打个比方，我配置一个 USART1 的中断，配置好之后点击生成代码。但是此时如果直接烧录运行的话，你会发现 USART1 并没有和我们想象的那样子发生中断，取而代之的是什么都没有发生。</p>\n<p>为什么会什么都没有发生呢，是因为我们只是配置好了对应层和对应模块，但是并没有使能它。这个其实和标准库有一点点的区别（其实也可以说没有区别）。那么如何正确的使能它呢，我们需要加上对应的启动函数，不同的模块的启动函数是不同的，如同上面的例子，为了正确的使得 USART1 进行空闲中断运行，我们需要加上：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__HAL_UART_ENABLE_IT(&amp;huart1,UART_IT_IDLE);</code></pre>\n\n<p>在启动区域中，以保证在代码烧录的时候正确的运行。</p>\n<p>其实这个和分离 Init 函数的道理是一样的，类比于基本库的话，就是其他配置都写好了但是 Init 还没有写上去，这个 Init 函数将由你来写。而转变成HAL库就是另外一种的写法。</p>\n<p>启动函数可以写在代码的任何地方，只要你能运行到对应的函数，那么对应模块的对应功能将被启用，大部分的外设都具备启动函数的。</p>\n<h1 id=\"2-中断配置\"><a href=\"#2-中断配置\" class=\"headerlink\" title=\"2.中断配置\"></a><strong>2.中断配置</strong></h1><p>中断配置，这里多嘴一句就是可以在任何的模块能触发中断的模块上进行配置，能触发中断的模块在配置的区块上都会有 NVIC Setting 的小格，可以方便你进行配置。顺带一提就是对应中断的配置间的设置要看清楚不然容易出事或者冲突。</p>\n<p>从 HAL 可以进入中断界面管理所有中断</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllNVIC/NVIC/Untitled.png\" alt=\"Untitled.png\"></p>\n<p><img src=\"/post/cubeMX/cubeMX-AllNVIC/NVIC/Untitled%201.png\" alt=\"Untitled%201.png\"></p>\n<p><img src=\"/post/cubeMX/cubeMX-AllNVIC/NVIC/Untitled%202.png\" alt=\"Untitled%202.png\"></p>\n<h1 id=\"3-配置技巧\"><a href=\"#3-配置技巧\" class=\"headerlink\" title=\"3.配置技巧\"></a><strong>3.配置技巧</strong></h1><p>配置技巧方面，我们可以先想好我们所需要的中断，排列好对应的优先级（当你使用的是中断系统的时候），然后再统一进行配置，切记不要配置的过程中东改一下西改一下，否则有可能造成优先级混乱的问题。</p>\n<h1 id=\"4-方式格式\"><a href=\"#4-方式格式\" class=\"headerlink\" title=\"4.方式格式\"></a><strong>4.方式格式</strong></h1><p>方式格式，这个是因人而异的，不同的排版格式决定着你代码的美观和质量，一个优秀的代码格式会让别人看你的代码的时候，无论是理解过程还是编写过程都会大大加分。</p>\n","text":"这张实际上为了补上前面没有说明的内容而写的，也是我写到上一章的时候突然发现没写的内容，这里进行补充。 首先是一直以来提到却没有详细说的模块启动。 1.模块启动函数什么是模块启动函数呢？ 在我们生成代码的时候，HAL 只是会帮我们配置好对应的东西，而真正的是否使用这个模块是由我们自...","link":"","photos":[],"count_time":{"symbolsCount":943,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E6%A8%A1%E5%9D%97%E5%90%AF%E5%8A%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">1.模块启动函数</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E4%B8%AD%E6%96%AD%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">2.中断配置</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E9%85%8D%E7%BD%AE%E6%8A%80%E5%B7%A7\"><span class=\"toc-text\">3.配置技巧</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E6%96%B9%E5%BC%8F%E6%A0%BC%E5%BC%8F\"><span class=\"toc-text\">4.方式格式</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CM中Freertos配置，使用","uid":"bc39b63ca62620f2c1763c0a6dd974d2","slug":"cubeMX/cubeMX-AllFRTOS/Freertos","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.093Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllFRTOS/Freertos.json","keywords":null,"cover":"https://s2.loli.net/2022/01/28/dTrYG1scEMzAatq.jpg","text":"1.Freertos基础配置随着STM32的相关开发工具越趋完善，现在只需要一些简单的操作便可以在STM32上运行FreeRTOS，今天让我们来看看基于STM32的开发工具STM32CubeMX如何新建基于FreeRTOS的工程。 1.1.Freertos界面介绍在CM里点开Fr...","link":"","photos":[],"count_time":{"symbolsCount":940,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Project Manager中的基础属性配置","uid":"895faf6251973f9e387856457d39661f","slug":"cubeMX/cubeMX-AllPoject/Project_Manager","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.105Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllPoject/Project_Manager.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/7DpAdF8jrSea1wf.jpg","text":"1.初始配置截图这个是在我们 Project Manager 栏中的代码生成配置模块的状态修改。 ","link":"","photos":[],"count_time":{"symbolsCount":51,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}