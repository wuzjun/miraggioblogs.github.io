{"title":"CM中USART的配置，以及启动方法","uid":"dea130efefdf0c7df84d0658a83a4131","slug":"cubeMX/cubeMX-AllUSART/USART","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.142Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllUSART/USART.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/176AIpMQUOKfNFt.jpg","content":"<h1 id=\"1-USART-配置\"><a href=\"#1-USART-配置\" class=\"headerlink\" title=\"1.USART 配置\"></a><strong>1.USART 配置</strong></h1><p>USART 的配置部分比较的难搞，但是其实大部分如果注意一下的话，问题其实并不太大。</p>\n<p>以下是 USART 中一些比较常用的通讯方式（其实实际上用的多的也就异步）</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllUSART/USART/Untitled.png\" alt=\"Untitled.png\"></p>\n<p>以及下面还有 RS232 的通信模式</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllUSART/USART/Untitled%201.png\" alt=\"Untitled%201.png\"></p>\n<p>这里涵盖了大部分的串口的通信模式，同时也可以说是涵盖了大部分的串口的功能，下面还没有解释的情况可以具体理解。</p>\n<p>以下是对应的 USART 中的一些参数的配置：</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllUSART/USART/Untitled%202.png\" alt=\"Untitled%202.png\"></p>\n<p>USART 的配置相对来说是介于 GPIO 配置中比较简单的一个部分，在配置好参数之后我们就可以创建代码进行调试了。</p>\n<h1 id=\"2-USART-常用函数\"><a href=\"#2-USART-常用函数\" class=\"headerlink\" title=\"2.USART 常用函数\"></a><strong>2.USART 常用函数</strong></h1><h2 id=\"2-1-USART-启动函数\"><a href=\"#2-1-USART-启动函数\" class=\"headerlink\" title=\"2.1.USART 启动函数\"></a>2.1.USART 启动函数</h2><p>通常用于启动 USART 的传输和 USART 的附带中断的传输模式：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__HAL_UART_ENABLE(__HANDLE__) \n__HAL_UART_ENABLE_IT(__HANDLE__, __INTERRUPT__)</code></pre>\n\n<p>其实和上面的一章的原理是一样的，是单纯的启动还是带中断的启动，而启动的效果也是不一样的，具体可以参考 TIM 那章中的启动函数的不同。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__HAL_UART_DISABLE(__HANDLE__) \n__HAL_UART_DISABLE_IT(__HANDLE__, __INTERRUPT__)</code></pre>\n\n<p>同理，失能或者失能中断效果的串口传输。</p>\n<h2 id=\"2-2-USART-标志位函数\"><a href=\"#2-2-USART-标志位函数\" class=\"headerlink\" title=\"2.2.USART 标志位函数\"></a>2.2.USART 标志位函数</h2><p>获取 USART 中断的时候的中断标志是什么。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__HAL_UART_GET_IT_SOURCE(__HANDLE__, __IT__)</code></pre>\n\n<p>清除中断标志位，但是这个的清除是有点问题的，后面会说如何清除会比较的好。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">__HAL_UART_CLEAR_FLAG(__HANDLE__, __FLAG__)</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>当然，USART 是可以添加 DMA 的，我会放到后面再写，以及中断我也会放到后面写，这里主要是希望大家可以理解对应的配置关系就可以了。</p></blockquote>\n","text":"1.USART 配置USART 的配置部分比较的难搞，但是其实大部分如果注意一下的话，问题其实并不太大。 以下是 USART 中一些比较常用的通讯方式（其实实际上用的多的也就异步） 以及下面还有 RS232 的通信模式 这里涵盖了大部分的串口的通信模式，同时也可以说是涵盖了大部分...","link":"","photos":[],"count_time":{"symbolsCount":808,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-USART-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1.USART 配置</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-USART-%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2.USART 常用函数</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-1-USART-%E5%90%AF%E5%8A%A8%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2.1.USART 启动函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-2-USART-%E6%A0%87%E5%BF%97%E4%BD%8D%E5%87%BD%E6%95%B0\"><span class=\"toc-text\">2.2.USART 标志位函数</span></a></li></ol></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CM中USART和DMA的实际关系（DR16为例）","uid":"20f9345191bccef7afe482693ca5ca5c","slug":"cubeMX/cubeMX-AllUD/USART_DMA","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.141Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllUD/USART_DMA.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/yBF9AXLxECZgwG3.jpg","text":"第一是因为 USART 和 DMA 在 RM 比赛中属于比较常用的模块，需要详细的了解清楚对应的方法。 第二是因为 USART 和 DMA 的配置实在是太坑了，我自己在这里也磨了将近 1 个星期的时间，这一个星期的时间我收集和分析网上各种各样的例子，以及对 HAL 的程序进行了阅...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"移植官方DSP库","uid":"953874cd19baad4a77313739111b0aad","slug":"cubeMX/cubeMX-DSP/DSP","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.146Z","comments":true,"path":"api/articles/cubeMX/cubeMX-DSP/DSP.json","keywords":null,"cover":"https://s2.loli.net/2022/01/28/OhwXALQNsKrtxTn.jpg","text":"1.这里一定要勾选所有库 2.debug里引入该路径 3.然后在工程里引入这四个库 4.HAL库在生成的时候已经赋值过来了，在自己工程的这个位置 5.然后在魔术棒里添加下面的宏定义 宏定义如下 __TARGET_FPU_VFP=1,ARM_MATH_CM4,__CC_ARM 5....","link":"","photos":[],"count_time":{"symbolsCount":378,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"},{"name":"DSP","slug":"DSP","count":1,"path":"api/tags/DSP.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}