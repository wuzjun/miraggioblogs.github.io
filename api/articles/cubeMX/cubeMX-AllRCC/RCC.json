{"title":"单片机初始化，RCC时钟树完整配置的方式和详细过程","uid":"239cc6a44ffbf4459edfad41793cd530","slug":"cubeMX/cubeMX-AllRCC/RCC","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.110Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllRCC/RCC.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/459bpcrk2jN7soA.jpg","content":"<h1 id=\"1-创建工程\"><a href=\"#1-创建工程\" class=\"headerlink\" title=\"1.创建工程\"></a><strong>1.创建工程</strong></h1><p>首先理所当然的，我们需要知道板子对应的型号是怎么样的，只有调整对了板子型号后面的代码才比较好搞，板子型号一般可以从芯片那个地方看到（一般是写在芯片上面的，由于是反光的，你需要一点小技巧才可以看到，比如说手机的手电筒或者一些别的方法）。</p>\n<p>知道板子型号之后，我们就可以直接在 CubeMX 上面创建对应的型号的工程。<br>打个比方，我需要创建一个 STM32F427VITx 的板子的工程，那么步骤如下:</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllRCC/RCC/Untitled.png\" alt=\"Untitled.png\"></p>\n<p><img src=\"/post/cubeMX/cubeMX-AllRCC/RCC/Untitled%201.png\" alt=\"Untitled%201.png\"></p>\n<p><img src=\"/post/cubeMX/cubeMX-AllRCC/RCC/Untitled%202.png\" alt=\"Untitled%202.png\"></p>\n<h1 id=\"2-配置RCC\"><a href=\"#2-配置RCC\" class=\"headerlink\" title=\"2.配置RCC\"></a><strong>2.配置RCC</strong></h1><p>创建好工程之后，我们需要优先配置对应的板子的外部工程树，以方便我们后期使用板子的功能，下面依旧是以 STM32F427VITx 为例来进行配置。</p>\n<p>在配置时钟树之前，我们还需要配置两个步骤，第一个就是把板子的模式设置为允许外部连接，方便我们调试和烧录，仿真检查。另外一个就是把板子的时钟调整成为外部时钟模式，也就是 HSE。</p>\n<p>下面来说如何配置两个对应的模式：</p>\n<ol>\n<li><p>首先点开 SYS，将 DEBUG 选项中的Disable调整成为 Serial Wire，这个是方便我们调整出对应的串口来进行烧录程序。</p>\n<p> <img src=\"/post/cubeMX/cubeMX-AllRCC/RCC/Untitled%203.png\" alt=\"Untitled%203.png\"></p>\n</li>\n</ol>\n<ol start=\"2\">\n<li><p>然后是第二步，点到 RCC 部分，然后把 HSE 的 Disable 设置成为 Crystal/Ceramic Resonator，也就是把板子内的外部时钟作为板子的当前板子主要时钟分频。</p>\n<p> <img src=\"/post/cubeMX/cubeMX-AllRCC/RCC/Untitled%204.png\" alt=\"Untitled%204.png\"></p>\n</li>\n</ol>\n<p>完成这两步之后的主要配置就完成了，接下来是配置时钟树。</p>\n<h1 id=\"3-配置时钟树\"><a href=\"#3-配置时钟树\" class=\"headerlink\" title=\"3.配置时钟树\"></a><strong>3.配置时钟树</strong></h1><p>配置时钟树是极为关键的一步，正确的配置时钟树能够给后面你使用对应模块的时候打下基础。如果你时钟树配置错误的话很可能会导致你后面的某一些模块不能够正常的使用！！</p>\n<p>首先我们需要知道的是，我手上的这个板子的对应的分频是多少，一看到时钟树上面那么多参数难免会感到很难受，所以我们要找到对应的合适的参数来进行设置。</p>\n<p>还是以上面的板子为例，通过查找原理图可以发现，板子对应的时钟的分频为 12MHZ，固在左边选择 HSE后，填入 12MHZ，HCLK 填入最大值 168 即可。</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllRCC/RCC/Untitled%205.png\" alt=\"Untitled%205.png\"></p>\n<p><img src=\"/post/cubeMX/cubeMX-AllRCC/RCC/Untitled%206.png\" alt=\"Untitled%206.png\"></p>\n<p>以上就配置完毕了，接下来就可以自定义你自己的模块了。</p>\n<h1 id=\"4-总结\"><a href=\"#4-总结\" class=\"headerlink\" title=\"4.总结\"></a><strong>4.总结</strong></h1><p>我的个人习惯的话，是通常会把同时生成 .c和.h配对生成勾选上的，以及生成代码的时候我会习惯于只生成对一个的 binary 库，这样子的话方便编译而且可以很好的加速。不过配置选择因人而异吧，也不一定说你一定要学我的配置方式，建议多生成自己代码，找到自己喜欢的配置方式会比较的好。</p>\n<h1 id=\"参考与致谢\"><a href=\"#参考与致谢\" class=\"headerlink\" title=\"参考与致谢\"></a>参考与致谢</h1><ul>\n<li><p><a href=\"https://blog.csdn.net/qingwufeiyang12346/article/details/79810301\">STM32开发笔记18: STM32CubeMX中Debug Serial Wire的设置问题</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/zxh1592000/article/details/78644121?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522160466377419725222432213%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=160466377419725222432213&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~baidu_landing_v2~default-1-78644121.pc_first_rank_v2_rank_v28&utm_term=STM32HSE%E6%98%AF%E4%BB%80%E4%B9%88&spm=1018.2118.3001.4449\">STM32系统学习——RCC（使用HSE/HSI配置时钟）</a></p>\n</li>\n</ul>\n","text":"1.创建工程首先理所当然的，我们需要知道板子对应的型号是怎么样的，只有调整对了板子型号后面的代码才比较好搞，板子型号一般可以从芯片那个地方看到（一般是写在芯片上面的，由于是反光的，你需要一点小技巧才可以看到，比如说手机的手电筒或者一些别的方法）。 知道板子型号之后，我们就可以直接...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-%E5%88%9B%E5%BB%BA%E5%B7%A5%E7%A8%8B\"><span class=\"toc-text\">1.创建工程</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E9%85%8D%E7%BD%AERCC\"><span class=\"toc-text\">2.配置RCC</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#3-%E9%85%8D%E7%BD%AE%E6%97%B6%E9%92%9F%E6%A0%91\"><span class=\"toc-text\">3.配置时钟树</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#4-%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">4.总结</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E4%B8%8E%E8%87%B4%E8%B0%A2\"><span class=\"toc-text\">参考与致谢</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Project Manager中的基础属性配置","uid":"895faf6251973f9e387856457d39661f","slug":"cubeMX/cubeMX-AllPoject/Project_Manager","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.105Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllPoject/Project_Manager.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/7DpAdF8jrSea1wf.jpg","text":"1.初始配置截图这个是在我们 Project Manager 栏中的代码生成配置模块的状态修改。 ","link":"","photos":[],"count_time":{"symbolsCount":51,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CM中USART和DMA的实际关系（DR16为例）","uid":"20f9345191bccef7afe482693ca5ca5c","slug":"cubeMX/cubeMX-AllUD/USART_DMA","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.141Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllUD/USART_DMA.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/yBF9AXLxECZgwG3.jpg","text":"第一是因为 USART 和 DMA 在 RM 比赛中属于比较常用的模块，需要详细的了解清楚对应的方法。 第二是因为 USART 和 DMA 的配置实在是太坑了，我自己在这里也磨了将近 1 个星期的时间，这一个星期的时间我收集和分析网上各种各样的例子，以及对 HAL 的程序进行了阅...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}