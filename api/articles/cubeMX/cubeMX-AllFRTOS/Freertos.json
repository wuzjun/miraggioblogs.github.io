{"title":"CM中Freertos配置，使用","uid":"bc39b63ca62620f2c1763c0a6dd974d2","slug":"cubeMX/cubeMX-AllFRTOS/Freertos","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.093Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllFRTOS/Freertos.json","keywords":null,"cover":"https://s2.loli.net/2022/01/28/dTrYG1scEMzAatq.jpg","content":"<h1 id=\"1-Freertos基础配置\"><a href=\"#1-Freertos基础配置\" class=\"headerlink\" title=\"1.Freertos基础配置\"></a><strong>1.Freertos基础配置</strong></h1><p>随着STM32的相关开发工具越趋完善，现在只需要一些简单的操作便可以在STM32上运行FreeRTOS，今天让我们来看看基于STM32的开发工具STM32CubeMX如何新建基于FreeRTOS的工程。</p>\n<h2 id=\"1-1-Freertos界面介绍\"><a href=\"#1-1-Freertos界面介绍\" class=\"headerlink\" title=\"1.1.Freertos界面介绍\"></a>1.1.Freertos界面介绍</h2><p>在CM里点开Freertos界面后，选择CMSIS_V1/CMSIS_V2接口。</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllFRTOS/Freertos/Untitled.png\" alt=\"Untitled.png\"></p>\n<p>选择完接口后，来到配置窗口</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllFRTOS/Freertos/Untitled%201.png\" alt=\"Untitled%201.png\"></p>\n<h2 id=\"1-2-Freertos配置\"><a href=\"#1-2-Freertos配置\" class=\"headerlink\" title=\"1.2.Freertos配置\"></a>1.2.Freertos配置</h2><p>首先要修改Include parameters里的内容，根据自己的需求而定</p>\n<p>本人改成下图所示：</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllFRTOS/Freertos/Untitled%202.png\" alt=\"Untitled%202.png\"></p>\n<p>接着修改Tasks and Queues里的内容，点击右下角的Add，即可新建函数</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllFRTOS/Freertos/Untitled%203.png\" alt=\"Untitled%203.png\"></p>\n<p>创建任务时要注意个任务之间的优先级，初始化顺序</p>\n<p><a href=\"https://lapzjfit.site/post/FreeRTOS%2FTask%2FTask_Priority\">设置任务优先级思路，初始化顺序</a></p>\n<p>根据自己的需求创建任务后，可以在FreeRTOS Heap Usage查看使用的堆大小情况。</p>\n<hr>\n<p>但是当你点击Generate code时，CubeMX会报警告</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllFRTOS/Freertos/Untitled%204.png\" alt=\"Untitled%204.png\"></p>\n<p>这是因为HAL和Rtos使用同一个时钟源了。</p>\n<p>可以在Timebase Source里选择其中一个TIM就行了，这里建议使用基本定时器就可以了。</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllFRTOS/Freertos/Untitled%205.png\" alt=\"Untitled%205.png\"></p>\n<h1 id=\"2-Freertos使用\"><a href=\"#2-Freertos使用\" class=\"headerlink\" title=\"2.Freertos使用\"></a><strong>2.Freertos使用</strong></h1><p>利用STM32CudeMX配置后，任务会自动创建，任务定义在freertos.c中，可直接在任务体中编写任务。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">void Test(void const * argument)\n&#123;\n  &#x2F;* USER CODE BEGIN Test *&#x2F;\n\t  &#x2F;* Infinite loop *&#x2F;\n\tfor (;;)\n\t&#123;\n\t\tDebug_addData(VisionData.RawData.x, 1);\n\t\tDebug_addData(VisionData.RawData.y, 2);\n\t\tDebug_addData(VisionData.FPS, 3);\n\t\tDebug_show(3);\n\n\t\tosDelay(5);\n\t&#125;\n  &#x2F;* USER CODE END Test *&#x2F;\n&#125;</code></pre>\n\n<p>例如说这个任务，每5s向上位机发送数据，接线没问题后，出来的结果：</p>\n<p><img src=\"/post/cubeMX/cubeMX-AllFRTOS/Freertos/Untitled%206.png\" alt=\"Untitled%206.png\"></p>\n<h1 id=\"参考与致谢\"><a href=\"#参考与致谢\" class=\"headerlink\" title=\"参考与致谢\"></a><strong>参考与致谢</strong></h1><ul>\n<li><a href=\"https://blog.csdn.net/callmesumo/article/details/89403787\">时钟源报错</a></li>\n</ul>\n","text":"1.Freertos基础配置随着STM32的相关开发工具越趋完善，现在只需要一些简单的操作便可以在STM32上运行FreeRTOS，今天让我们来看看基于STM32的开发工具STM32CubeMX如何新建基于FreeRTOS的工程。 1.1.Freertos界面介绍在CM里点开Fr...","link":"","photos":[],"count_time":{"symbolsCount":940,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1-Freertos%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1.Freertos基础配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-1-Freertos%E7%95%8C%E9%9D%A2%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">1.1.Freertos界面介绍</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-2-Freertos%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">1.2.Freertos配置</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-Freertos%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">2.Freertos使用</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E4%B8%8E%E8%87%B4%E8%B0%A2\"><span class=\"toc-text\">参考与致谢</span></a></li></ol>","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"CM中的DMA配置简述","uid":"ba66d244f8bb441b69f53a62936b94c6","slug":"cubeMX/cubeMX-AllDMA/DMA","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.086Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllDMA/DMA.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/6kRxNAZvpIhBcfX.jpg","text":"DMA 一般是和 USART 一起使用的，但是由于 DMA 中各种奇奇怪怪的坑，导致在实际上使用的时候会出现这里不行，那里不行，各种各样的问题和 BUG。其实 DMA 这部分是比较难以解释的，在写这个笔记之前我看过网上很多的对于 DMA 配置和相关内容的解释，都讲的很笼统，或者说...","link":"","photos":[],"count_time":{"symbolsCount":570,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"CM中的模块启动函数，中断配置，配置技巧，方式格式","uid":"fdaeef215bccf348abd53466e04935a5","slug":"cubeMX/cubeMX-AllNVIC/NVIC","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.101Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllNVIC/NVIC.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/mYiOwM6ZS41GaC9.jpg","text":"这张实际上为了补上前面没有说明的内容而写的，也是我写到上一章的时候突然发现没写的内容，这里进行补充。 首先是一直以来提到却没有详细说的模块启动。 1.模块启动函数什么是模块启动函数呢？ 在我们生成代码的时候，HAL 只是会帮我们配置好对应的东西，而真正的是否使用这个模块是由我们自...","link":"","photos":[],"count_time":{"symbolsCount":943,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}