{"title":"HAL_UART中断代码的理解","uid":"5f63062ce45d7aec6b36bb6e5eaebe8a","slug":"cubeMX/HAL_UART中断函数","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.084Z","comments":true,"path":"api/articles/cubeMX/HAL_UART中断函数.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/jHbGcYUgRyxr9kt.jpg","content":"<p>这其实是对上一节 USART 和 DMA 方面的补充。</p>\n<p>一方面是为了加深对中断代码的了解程度，另一方面是为了补充上一节没有写完的东西。</p>\n<p>我们先重新来看看中断函数的具体结构。</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">void DR16_Handler(UART_HandleTypeDef *huart)\n&#123;\n\n\tif (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE) &amp;&amp;\n\t\t__HAL_UART_GET_IT_SOURCE(huart, UART_IT_IDLE))\n\t&#123;\n\t\t__HAL_UART_CLEAR_IDLEFLAG(huart);\n\t\t__HAL_DMA_DISABLE(huart-&gt;hdmarx);\n\n\t\t&#x2F;&#x2F;if(DR16BufferNumber - DMA_GET_COUNTER(huart-&gt;hdmarx-&gt;Instance) &#x3D;&#x3D; DR16BufferTruthNumber)\n\t\tif (__HAL_DMA_GET_COUNTER(huart-&gt;hdmarx) &#x3D;&#x3D; DR16BufferLastNumber)\n\t\t&#123;\n\t\t\tDR16.DR16_Process(DR16Buffer);\n\t\t&#125;\n\n\t\t__HAL_DMA_SET_COUNTER(huart-&gt;hdmarx, DR16BufferNumber);\n\t\t__HAL_DMA_ENABLE(huart-&gt;hdmarx);\n\t&#125;\n&#125;</code></pre>\n\n<p>在刚进入中断的时候，和基本库一样，代码会先对对应的标志位进行一次判断。</p>\n<p>但是很奇怪的是这里却判断了两个标志位，为什么呢？</p>\n<p>实际上，这两个判断分别是读取在对应的 HAL 库中的 USART 的寄存器中不同的标志位是怎么样的。</p>\n<ul>\n<li><p><strong>_HAL_UART_GET_IT_SOURCE</strong></p>\n<p>  直接读取控制寄存器里面的 CRx 标志位的情况，CRx 位置的寄存器代表的是对应的功能有没有被开启。也就是说和中断是否有发生无关，这句代码的意思只是单纯的判断你有没有启用中断。</p>\n</li>\n</ul>\n<ul>\n<li><p><strong>__HAL_UART_GET_FLAG</strong></p>\n<p>  获取 SR 寄存器里面的情况，也就是读取被 CR 控制器控制之后的对应状态，当有中断来临的时候，SR 被置位，同时我们就可以读取是否有中断来临。这个其实和标准库的直接判断中断有没有来临是很像的。也就是说，要成功的触发这个中断，首先是要求你这个中断必须是已经被开启了的，另外一方面是要求你这个中断必须接收到了中断。当两个条件都被满足的时候，中断开启成功。</p>\n</li>\n</ul>\n<ul>\n<li><p><strong>__HAL_DMA_GET_COUNTER</strong></p>\n<p>  指的是对应 DMA 获取剩余数据，如果我定义的数据库的大小是 30 个字节，而遥控器对应的字节是 18 个，那么接收完后对应的字节就是 12 个，以此类推。</p>\n</li>\n</ul>\n<p>然后下面就是重新设置对应的 DMA 的长度，然后重新使能接收。</p>\n","text":"这其实是对上一节 USART 和 DMA 方面的补充。 一方面是为了加深对中断代码的了解程度，另一方面是为了补充上一节没有写完的东西。 我们先重新来看看中断函数的具体结构。 void DR16_Handler(UART_HandleTypeDef *huart) &#123; i...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"toc":"","author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"简单四轮机器人","uid":"5ed1839713d43591c8a49ca17920825f","slug":"Webots/Basis/Wheeled Robot/Wheeled Robot","date":"2022-01-30T12:49:36.000Z","updated":"2022-02-08T16:30:33.738Z","comments":true,"path":"api/articles/Webots/Basis/Wheeled Robot/Wheeled Robot.json","keywords":null,"cover":"https://s2.loli.net/2022/02/08/cRgApP45ZNyhiqr.jpg","text":"1. 四轮小车建立流程图 2. 四轮小车具体建立过程2.1. 新建新世界新建向导项目，创建一个地板（简单模型仿真） 2.2. 建立小车2.2.1. 建立小车主体新建一个Robot节点，点击children，新增shape，宏定义为BODY 给该Shape新增纹理，geometry...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"运动仿真","slug":"运动仿真","count":19,"path":"api/categories/运动仿真.json"}],"tags":[{"name":"Webots","slug":"Webots","count":19,"path":"api/tags/Webots.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"Freertos中队列的使用","uid":"d375d028bb2ac4562b320ed8e131081e","slug":"cubeMX/cubeMX-Freertos队列","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.155Z","comments":true,"path":"api/articles/cubeMX/cubeMX-Freertos队列.json","keywords":null,"cover":"https://s2.loli.net/2022/01/27/B6WkKzXE13Stnqi.jpg","text":"1.队列基础学习可自行搜索。 2.队列的创建HAL库可以生成队列的，但是生成完之后不怎么方便使用，而且是有点BUG，于是我还是使用标准库的形式写。（创建队列必须放在HAL库规定的位置上，不然下次GENERATE时会删掉） 函数原型： xQueueHandle xQueueCrea...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}