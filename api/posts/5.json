{"total":63,"pageSize":12,"pageCount":6,"data":[{"title":"CM中USART和DMA的实际关系（DR16为例）","uid":"20f9345191bccef7afe482693ca5ca5c","slug":"cubeMX/cubeMX-AllUD/USART_DMA","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.141Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllUD/USART_DMA.json","cover":"https://s2.loli.net/2022/01/27/yBF9AXLxECZgwG3.jpg","text":"第一是因为 USART 和 DMA 在 RM 比赛中属于比较常用的模块，需要详细的了解清楚对应的方法。 第二是因为 USART 和 DMA 的配置实在是太坑了，我自己在这里也磨了将近 1 个星期的时间，这一个星期的时间我收集和分析网上各种各样的例子，以及对 HAL 的程序进行了阅...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CM中TIM定时器的配置，以及启动方法","uid":"4db5497cbecd2cc278cbb61ec8b5e452","slug":"cubeMX/cubeMX-AllTIM/TIM","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.121Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllTIM/TIM.json","cover":"https://s2.loli.net/2022/01/27/X1xTAqOvDfNa7oE.jpg","text":"1.用HAL配置TIM的选项设置接着上一个工程继续进行编辑，由于 TIM 的高级定时器和低级定时器的界面是不同的，所以改动的方法和方式也是不同的，先由高级定时器开始理解。 这里直接使用一张图来理解高级定时器的作用： 低级定时器就比较的简单，可以直接使能一个按键的的方法来进行配置：...","link":"","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CM中USART的配置，以及启动方法","uid":"dea130efefdf0c7df84d0658a83a4131","slug":"cubeMX/cubeMX-AllUSART/USART","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.142Z","comments":true,"path":"api/articles/cubeMX/cubeMX-AllUSART/USART.json","cover":"https://s2.loli.net/2022/01/27/176AIpMQUOKfNFt.jpg","text":"1.USART 配置USART 的配置部分比较的难搞，但是其实大部分如果注意一下的话，问题其实并不太大。 以下是 USART 中一些比较常用的通讯方式（其实实际上用的多的也就异步） 以及下面还有 RS232 的通信模式 这里涵盖了大部分的串口的通信模式，同时也可以说是涵盖了大部分...","link":"","photos":[],"count_time":{"symbolsCount":808,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"移植官方DSP库","uid":"953874cd19baad4a77313739111b0aad","slug":"cubeMX/cubeMX-DSP/DSP","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.146Z","comments":true,"path":"api/articles/cubeMX/cubeMX-DSP/DSP.json","cover":"https://s2.loli.net/2022/01/28/OhwXALQNsKrtxTn.jpg","text":"1.这里一定要勾选所有库 2.debug里引入该路径 3.然后在工程里引入这四个库 4.HAL库在生成的时候已经赋值过来了，在自己工程的这个位置 5.然后在魔术棒里添加下面的宏定义 宏定义如下 __TARGET_FPU_VFP=1,ARM_MATH_CM4,__CC_ARM 5....","link":"","photos":[],"count_time":{"symbolsCount":378,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"},{"name":"DSP","slug":"DSP","count":1,"path":"api/tags/DSP.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Flash使用","uid":"183e6b77bf2e73e194c62a98ae96b0fa","slug":"cubeMX/cubeMX-Flash/Flash","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.154Z","comments":true,"path":"api/articles/cubeMX/cubeMX-Flash/Flash.json","cover":"https://s2.loli.net/2022/02/07/feLI8AMyJNxb3S9.jpg","text":"1.Flash 的上锁解锁&#x2F;** * @brief Flash解锁 * *&#x2F; void MEM_If_Init_FS(void) &#123; HAL_FLASH_Unlock(); __HAL_FLASH_CLEAR_FLAG(FLASH_FLAG_EOP ...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"},{"name":"Flash","slug":"Flash","count":1,"path":"api/tags/Flash.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"看门狗","uid":"e72a37ec3a778e7788cfedf767ec8c28","slug":"cubeMX/cubeMX-IWDG/看门狗","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.156Z","comments":true,"path":"api/articles/cubeMX/cubeMX-IWDG/看门狗.json","cover":"https://s2.loli.net/2022/02/07/CXd4avci6nZgLEY.jpg","text":"1.CubeMX配置这次用的是独立看门狗，在 CubeMX 里可以这样配置： 这里按照公式配置需要的时间。 2.程序喂狗经过上面配置后，开机后自动会运行看门狗，要是不进行代码上喂狗的话，是会不断重启的，喂狗如下： HAL_IWDG_Refresh(&amp;hiwdg); &#x...","link":"","photos":[],"count_time":{"symbolsCount":328,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"},{"name":"IWDG","slug":"IWDG","count":1,"path":"api/tags/IWDG.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"RNG","uid":"b99053034a0f282087f2cf75e7079caa","slug":"cubeMX/cubeMX-RNG/RNG","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.163Z","comments":true,"path":"api/articles/cubeMX/cubeMX-RNG/RNG.json","cover":"https://s2.loli.net/2022/02/07/pgAcBnkZQTOPmWJ.jpg","text":"1.CubeMX的配置 找到 RNG 使能 点开时钟配置，会提醒你配置，就按默认生成的时钟就可以了 2.RNG 使用&#x2F;&#x2F;RNG ：硬件随机数发生器 ：提供个32位的随机数 &#x2F;&#x2F;两个连续随机数之间的间隔是40个PLL48CLK时钟信号周期 &...","link":"","photos":[],"count_time":{"symbolsCount":731,"symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"},{"name":"RNG","slug":"RNG","count":1,"path":"api/tags/RNG.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"CM中GPIO的配置，使用，以及启动方法","uid":"d4fbf5902e3d36a3dfddb88b82a353a3","slug":"cubeMX/cubeMx-AllGPIO/GPIO","date":"2022-01-27T10:49:36.000Z","updated":"2022-02-08T15:35:50.168Z","comments":true,"path":"api/articles/cubeMX/cubeMx-AllGPIO/GPIO.json","cover":"https://s2.loli.net/2022/01/27/EDjA1HNqsKOLrx7.jpg","text":"1.配置 GPIO配置 GPI O大概是 CubeMX 中最最简单的一个模块的配置的，大概没有比这个更加简单的模块了，如果有那就是基本库。 但是，简单归简单，坑依旧是不见少到哪里去，配置之后找问题还是一样的自闭。 比方说你要定义一个 GPIO 的 LED 灯，以 STM32F42...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"Embedded","slug":"Embedded","count":19,"path":"api/categories/Embedded.json"}],"tags":[{"name":"HAL","slug":"HAL","count":14,"path":"api/tags/HAL.json"},{"name":"cubeMX","slug":"cubeMX","count":18,"path":"api/tags/cubeMX.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"C/C++ 序章","uid":"fb03c6ff7a7697bc30c623660715d012","slug":"C-C++/C-C++_list","date":"2022-01-25T10:49:36.000Z","updated":"2022-02-08T15:35:49.812Z","comments":true,"path":"api/articles/C-C++/C-C++_list.json","cover":"https://s2.loli.net/2022/01/25/FjO4qZNWp8gDwLc.jpg","text":"1.目录 该篇章主要分为两大部分： C/C++ 基础知识：该部分是 C/C++ 通用的基础内容 C++ 核心知识：涉及 C++ 类和对象内容 1.1.C/C++ 基础知识该部分的内容只是涉及到平时易错以及遗忘点，用的频繁的语法请移步到如黑马等专门的教程中了解。 C/C++ 基础编...","link":"","photos":[],"count_time":{"symbolsCount":287,"symbolsTime":"1 mins."},"categories":[{"name":"Language","slug":"Language","count":8,"path":"api/categories/Language.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":7,"path":"api/tags/C-C.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},{"title":"C/C++ 基础编程","uid":"c7ad3fc5539e6e09e5d04802e792c17b","slug":"C-C++/C-C++_AllBasis/C-C++_basis","date":"2022-01-24T10:49:36.000Z","updated":"2022-02-08T15:35:49.774Z","comments":true,"path":"api/articles/C-C++/C-C++_AllBasis/C-C++_basis.json","cover":"https://s2.loli.net/2022/01/24/kBnujWr2NEJPVDI.jpg","text":"1.C++入门1.1.Hello world#include &lt;iostream&gt; using namespace std; int main() &#123; cout &lt;&lt; &quot;Hello world&quot; &lt;&lt; endl; ...","link":"","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"Language","slug":"Language","count":8,"path":"api/categories/Language.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":7,"path":"api/tags/C-C.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"C++ 面向对象三大特征","uid":"685a5f7f3a39655d238f8071cde76eaf","slug":"C-C++/C-C++_AllFeature/C-C++_Feature","date":"2022-01-24T10:49:36.000Z","updated":"2022-02-08T15:35:49.785Z","comments":true,"path":"api/articles/C-C++/C-C++_AllFeature/C-C++_Feature.json","cover":"https://s2.loli.net/2022/01/24/tXfKMiY9yCQpqB4.jpg","text":"1.封装1.1.封装的意义封装是C++面向对象三大特性之一 封装的意义： 将属性和行为作为一个整体，表现生活中的事物 将属性和行为加以权限控制 封装意义一： 在设计类的时候，属性和行为写在一起，表现事物 语法： class 类名&#123; 访问权限： 属性 / 行为 &#125...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"Language","slug":"Language","count":8,"path":"api/categories/Language.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":7,"path":"api/tags/C-C.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"C++ 进阶知识","uid":"c4064ddb260b54731c75e982795ee11a","slug":"C-C++/C-C++_AllCore/C++_Core","date":"2022-01-24T10:49:36.000Z","updated":"2022-02-08T15:35:49.781Z","comments":true,"path":"api/articles/C-C++/C-C++_AllCore/C++_Core.json","cover":"https://s2.loli.net/2022/01/24/ACDGgxRZ8ot9BdF.jpg","text":"1.内存分区模型C++程序在执行时，将内存大方向划分为4个区域 代码区：存放函数体的二进制代码，由操作系统进行管理的 全局区：存放全局变量和静态变量以及常量 栈区：由编译器自动分配释放, 存放函数的参数值,局部变量等 堆区：由程序员分配和释放,若程序员不释放,程序结束时由操作系统...","link":"","photos":[],"count_time":{"symbolsCount":"8.3k","symbolsTime":"8 mins."},"categories":[{"name":"Language","slug":"Language","count":8,"path":"api/categories/Language.json"}],"tags":[{"name":"C/C++","slug":"C-C","count":7,"path":"api/tags/C-C.json"}],"author":{"name":"Miraggio","slug":"blog-author","avatar":"https://s2.loli.net/2022/01/23/kntF9TEBOyHquwV.png","link":"https://lapzjfit.site","description":"喜欢研究奇奇怪怪的技术&游戏宅","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}